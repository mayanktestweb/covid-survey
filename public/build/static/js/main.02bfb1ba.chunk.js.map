{"version":3,"sources":["actions/admin.js","reducers/admin.js","actions/survey_officer.js","reducers/survey_officer.js","actions/family.js","reducers/family.js","actions/members.js","reducers/members.js","store.js","Apis.js","views/Home.js","views/Koka.js","colors.js","views/AdminLogin.js","views/AdminDashboard.js","views/SurveyOfficers.js","views/AreaBlocks.js","views/ContainmentAreas.js","views/QuarantineCenters.js","views/AddContainmentSource.js","views/survey/Main.js","views/survey/Login.js","views/survey/Dashboard.js","views/survey/GeneralInformation.js","views/survey/FamilyMembers.js","views/survey/FamilyHead.js","views/survey/Symptoms.js","views/TestComponent.js","views/survey/Deseases.js","views/survey/Pregnancy.js","views/survey/TravelDetails.js","views/survey/ContactExposure.js","views/survey/SelectForSample.js","views/survey/QuarantineStatus.js","views/GeneralReport.js","App.js","serviceWorker.js","index.js"],"names":["setAdmin","admin","type","payload","reducer","state","action","setSurveyOfficer","officer","setFamily","family","head","headName","name","headGovtIdType","govtIdType","headGovtIdNumber","govtIdNumber","headMobileNumber","mobileNumber","setMembers","members","updateMemberByIndex","index","member","allMembers","membersWithHead","map","splice","store","createStore","combineReducers","adminReducer","survey_officer","surveyOfficerReducer","familyReducer","membersReducer","api_url","default_url","Apis","validate_admin_token","admin_login","confirm_admin_otp","survey_officers","add_survey_officer","delete_survey_officer","area_blocks","add_block","delete_block","containment_areas","add_containment_area","edit_containment_area","delete_containment_area","quarantine_centers","add_quarantine_center","containment_sources","add_containment_source","attach_containment_sources","fetch_general_report","save_edited_member","survey_officer_login","confirm_survey_otp","validate_survey_token","containment_area_sources","save_family","save_member","connect","dispatch","props","useLocation","history","useHistory","useEffect","token","localStorage","getItem","Axios","headers","url","method","then","res","status","data","push","goToLogin","catch","err","window","alert","style","display","height","justifyContent","alignItems","Typography","variant","Button","color","onClick","lightOrange","orange","lightBlue","blue","lightGrey","blueGrey","veryLightGrey","useState","preOtp","setPreOtp","setMobileNumber","otp","setOtp","validateMobileNumber","width","flexDirection","padding","textAlign","TextField","label","value","onChange","event","target","background","marginTop","post","JSON","stringify","setItem","AppBar","position","Toolbar","backgroundColor","IconButton","edge","aria-label","Menu","flexGrow","marginLeft","marginRight","ExitToApp","surveyOfficers","setSurveyOfficers","queryString","setQueryString","loading","setLoading","openAddOfficer","setOpenAddOfficer","newOfficerName","setNewOfficerName","newOfficerAge","setNewOfficerAge","newOfficerMobileNumber","setNewOfficerMobileNumber","newOfficerAdhar","setNewOfficerAdhar","openDeleteOfficer","setOpenDeleteOfficer","officerToDelete","setOfficerToDelete","error","finally","SortedSurveyOfficers","setOfficersToShow","query","trim","showOfficers","sort","oone","otwo","margin","borderWidth","borderColor","borderRadius","replace","age","adhar","startIcon","Delete","startOfficerDeletion","CircularProgress","top","flexWrap","Search","Add","Dialog","open","onClose","surveyOfficer","officerId","_id","officers","forEach","item","blocks","setBlocks","newBlock","setNewBlock","openDeleteBlock","setOpenDeleteBlock","blockToDelete","setBlockToDelete","loadBlocks","get","zIndex","block","bone","btwo","sortBlocks","startBlockDeletion","blockId","currentBlocks","containmentAreas","setContainmentAreas","openAddContainmentArea","setOpenAddContainmentArea","openEditContainmentArea","setOpenEditContainmentArea","openDeleteArea","setOpenDeleteArea","areaToEdit","setAreaToEdit","newBlockName","setNewBlockName","containmentStatus","setContainmentStatus","setBlock","loadContainmentAreas","sortByName","areas","aone","atwo","cancelEditingArea","area","cancelDeletingArea","blockName","Edit","find","blk","startEditingArea","addContainmentSource","startDeletingArea","FormControl","InputLabel","id","Select","labelId","MenuItem","Switch","checked","Save","containment_area","areaId","setloading","quarantineCenters","setQuarantineCenters","setName","address","setAddress","openAddQuarantine","setOpenAddQuarantine","loadQuarantineCenters","loadingBlocks","arr","center","quarantine_center","console","log","containmentArea","setContainmentArea","containmentSources","setContainmentSources","allContainmentSources","setAllContainmentSources","openAddNewSource","setOpenAddNewSource","setblocks","setblock","qCenter","setQCenter","useReducer","familyHead","traveledFrom","arrivalDate","quarantineDate","releaseDate","quarantineCenter","quarantineCenterName","newSource","newSourceDispatch","location","loadAllContainmentSources","isSourceSelected","source","src","inputArray","validInputForSource","Paper","maxHeight","overflow","length","Checkbox","sSrcs","toggleSourceSelection","blck","qc","familyInit","familyId","zoneType","dateOfSurvey","Date","numberOfMembers","riskLevel","now","toString","familyDispatch","validateInputs","marginBottom","endIcon","ArrowForward","addMember","openAddMember","setOpenAddMember","memberInit","sex","surveyDate","symptoms","deseases","pregnancy","travelDate","sourceContacted","contactNature","contactRelation","selectedForSample","quarantined","homeQuarantined","mDispatch","List","borderStyle","setFamilyHead","setMembersHead","setHead","headIndex","setHeadIndex","parseInt","component","RadioGroup","FormControlLabel","control","Radio","openSymptoms","setOpenSymptoms","setSymptoms","memberIndex","setMemberIndex","setmember","cancelSymptoms","toggleSymptom","symptom","includes","ss","startAddingSymptoms","TestComponent","val","setval","game","valList","person","openDeseases","setOpenDeseases","setDeseases","cancelDeseases","toggleDesease","desease","startAddingDeseases","togglePregnancy","openTravel","setOpenTravel","setMember","setTraveledFrom","setTravelDate","cancelTravel","startTravelDetails","minDate","setDate","getDate","validInputDate","openContactedSource","setOpenContactedSource","selectedSource","setSelectedSource","loadContainmentSources","cancelContactedSource","sources","Divider","borderTopLeftRadius","borderTopRightRadius","startContactedSource","nature","setNature","relation","setRelation","risk","setRisk","toggleSelectForSample","openSaveToServer","setOpenSaveToServer","saving","setSaving","savingMsg","setSavingMsg","getQuarantineCenter","startSaveToServer","a","saveFamily","saveMember","Promise","resolve","reject","toggleQuarantine","setQuarantineCenter","date","rDate","rIso","toISOString","split","setQuarantineDate","setReleaseDate","openDrawer","setOpenDrawer","fetchedData","setFetchedData","drawerAction","setDrawerAction","currentQuery","$regex","$options","$in","$gte","$lt","minAge","maxAge","$lte","minSurveyDate","maxSurveyDate","minQuarantineDate","maxQuarantineDate","qdispatch","quarantineStatus","fieldsets","fdispatch","filterInit","riskLevels","pstate","level","filter","filterDispatch","openQuarantineCenterSelection","setOpenQuarantineCenterSelection","openContainmentAreaSelection","setOpenContainmentAreaSelection","selectedContainmentArea","setSelectedContainmentArea","zoneTypes","setZoneTypes","setQuarantineStatus","openAgeFilter","setOpenAgeFilter","openSurveyDateFilter","setOpenSurveyDateFilter","openRiskLevelFilter","setOpenRiskLevelFilter","openQuarantineDateFilter","setOpenQuarantineDateFilter","openEditMember","setOpenEditMember","memberToEdit","memberToEditDispatch","toggleZoneTypeSelection","zone","zts","zt","loadInitialData","loadSurveyOfficers","TableContainer","maxWidth","Table","TableHead","TableCell","TableBody","TableRow","ar","toDateString","toLocaleDateString","s","getSourceName","getQuarantineStatus","c","Drawer","anchor","borderRightStyle","borderRightWidth","borderRightColor","general_report","FormLabel","cArea","sca","sc","toggleContainmentAreaSelection","row","memberId","updates","oldData","mem","saveEditedMember","App","exact","path","SurveyOfficers","QuarantineStatus","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.02bfb1ba.chunk.js","sourcesContent":["export const SET_ADMIN = \"admin:setAdmin\"\r\n\r\nexport function setAdmin(admin) {\r\n    return {\r\n        type: SET_ADMIN,\r\n        payload: admin\r\n    }\r\n}","import { SET_ADMIN } from '../actions/admin'\r\n\r\nlet reducer = (state = null, action) => {\r\n    \r\n    if(action.type == SET_ADMIN) {\r\n        state = action.payload\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer","export const SET_SURVEY_OFFICER = \"surveyOfficer:setSurveyOfficer\"\r\n\r\nexport function setSurveyOfficer(officer) {\r\n    return {\r\n        type: SET_SURVEY_OFFICER,\r\n        payload: officer\r\n    }\r\n}","import { SET_SURVEY_OFFICER } from '../actions/survey_officer'\r\n\r\nlet reducer = (state = null, action) => {\r\n    \r\n    if(action.type == SET_SURVEY_OFFICER) {\r\n        state = action.payload\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer","export const SET_FAMILY = \"family:setFamily\"\r\nexport const SET_HEAD = \"family:setHead\"\r\n\r\nexport function setFamily(family) {\r\n    return {\r\n        type: SET_FAMILY,\r\n        payload: family\r\n    }\r\n}\r\n\r\nexport function setHead(head) {\r\n    return {\r\n        type: SET_HEAD,\r\n        payload: head\r\n    }\r\n}","import { SET_FAMILY, SET_HEAD } from '../actions/family'\r\n\r\nlet reducer = (state = null, action) => {\r\n    \r\n    if(action.type == SET_FAMILY) {\r\n        state = action.payload\r\n    } else if (action.type == SET_HEAD) {\r\n        let head = action.payload\r\n        state = {...state, headName: head.name, headGovtIdType: head.govtIdType, headGovtIdNumber: \r\n         head.govtIdNumber, headMobileNumber: head.mobileNumber }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer","export const SET_MEMBERS = \"members:setMembers\"\r\nexport const ADD_MEMBER = \"members:addMember\"\r\nexport const SET_HEAD = \"members:setHead\"\r\nexport const UPDATE_MEMBER_BY_INDEX = \"members:updateMemberByIndex\"\r\n\r\nexport function setMembers(members) {\r\n    return {\r\n        type: SET_MEMBERS,\r\n        payload: members\r\n    }\r\n}\r\n\r\nexport function addMember(member) {\r\n    return {\r\n        type: ADD_MEMBER,\r\n        payload: member\r\n    }\r\n}\r\n\r\nexport function setHead(head) {\r\n    return {\r\n        type: SET_HEAD,\r\n        payload: head\r\n    }\r\n}\r\n\r\nexport function updateMemberByIndex({index, member}) {\r\n    return {\r\n        type: UPDATE_MEMBER_BY_INDEX,\r\n        payload: {index, member}\r\n    }\r\n}","import { SET_MEMBERS, ADD_MEMBER, SET_HEAD, UPDATE_MEMBER_BY_INDEX } from '../actions/members'\r\n\r\nlet reducer = (state = [], action) => {\r\n    \r\n    if(action.type == SET_MEMBERS) {\r\n        state = action.payload\r\n    } else if (action.type == ADD_MEMBER) {\r\n        state = [...state, action.payload]\r\n    } else if (action.type == SET_HEAD) {\r\n        let head = action.payload\r\n        let allMembers = [...state]\r\n        let membersWithHead = allMembers.map(member => {\r\n            return {...member, headName: head.name, headMobileNumber: head.mobileNumber}\r\n        })\r\n        state = membersWithHead\r\n    } else if (action.type == UPDATE_MEMBER_BY_INDEX) {\r\n        let {index, member} = action.payload\r\n        let allMembers = [...state]\r\n        allMembers.splice(index, 1, member)\r\n        state = allMembers\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer","import { combineReducers, createStore } from 'redux'\r\n\r\n\r\nimport adminReducer from './reducers/admin'\r\nimport surveyOfficerReducer from './reducers/survey_officer'\r\nimport familyReducer from './reducers/family'\r\nimport membersReducer from './reducers/members'\r\n\r\nlet store = createStore(combineReducers({\r\n    admin: adminReducer,\r\n    survey_officer: surveyOfficerReducer,\r\n    family: familyReducer,\r\n    members: membersReducer\r\n}))\r\n\r\nexport default store;","export const default_url = \"http://192.168.43.116:8080\"\r\nlet api_url = default_url+\"/api\"\r\n\r\nlet Apis = {\r\n    validate_admin_token: api_url+\"/admin/validate_token\",\r\n    admin_login: api_url+\"/admin/login\",\r\n    confirm_admin_otp: api_url+\"/admin/confirm_otp\",\r\n\r\n    survey_officers: api_url+\"/admin/survey_officers\",\r\n    add_survey_officer: api_url+\"/admin/add_survey_officer\",\r\n    delete_survey_officer: api_url+\"/admin/delete_survey_officer\",\r\n\r\n    area_blocks: api_url+\"/data/areablocks\",\r\n    add_block: api_url+\"/admin/add_block\",\r\n    delete_block: api_url+\"/admin/delete_block\",\r\n\r\n    containment_areas: api_url+\"/data/containment_areas\",\r\n    add_containment_area: api_url+\"/admin/add_containment_area\",\r\n    edit_containment_area: api_url+\"/admin/edit_containment_area\",\r\n    delete_containment_area: api_url+\"/admin/delete_containment_area\",\r\n\r\n    quarantine_centers: api_url+\"/data/quarantine_centers\",\r\n    add_quarantine_center: api_url+\"/admin/add_quarantine_center\",\r\n\r\n    containment_sources: api_url+\"/data/containment_sources\",\r\n    add_containment_source: api_url+\"/admin/add_containment_source\",\r\n    attach_containment_sources: api_url+\"/admin/attach_containment_sources\",\r\n\r\n    fetch_general_report: api_url+\"/admin/fetch_general_report\",\r\n    save_edited_member: api_url+\"/admin/save_edited_member\",\r\n\r\n\r\n    survey_officer_login: api_url+\"/survey/login\",\r\n    confirm_survey_otp: api_url+\"/survey/confirm_otp\",\r\n    validate_survey_token: api_url+'/survey/validate_token',\r\n\r\n    containment_area_sources: api_url+\"/data/containment_area_sources\",\r\n    save_family: api_url+\"/survey/save_family\",\r\n    save_member: api_url+\"/survey/save_member\"\r\n}\r\n\r\nexport default Apis;","import React, {useState, useEffect} from 'react'\r\nimport {Button, Typography} from '@material-ui/core'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Axios from 'axios'\r\nimport Apis from '../Apis'\r\nimport { setAdmin } from '../actions/admin'\r\n\r\nlet Home = props => {\r\n\r\n    let location = useLocation()\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        \r\n        let token = localStorage.getItem('admin_token')\r\n\r\n        if(token) {\r\n            // validate token\r\n            Axios({\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer '+token\r\n                },\r\n                url: Apis.validate_admin_token,\r\n                method: 'POST'\r\n            }).then(res => {\r\n                if(res.status == '200') {\r\n                    if(res.data.status == 'valid') {\r\n\r\n                        props.setAdmin({...res.data.admin, token: token})\r\n                        history.push(\"/admin/dashboard\")\r\n                    } else goToLogin()\r\n                }\r\n            }).catch(err => {\r\n                window.alert(\"Something went wrong\")\r\n            })\r\n        } else goToLogin()\r\n\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    let goToLogin = () => {\r\n        history.push('/admin/login')\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', height: '100vh', justifyContent:'center', alignItems: 'center'}}>\r\n            <Typography variant=\"h2\">Logo</Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        admin: state.admin\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        setAdmin: admin => dispatch(setAdmin(admin))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Home);","import React, {useState, useEffect} from 'react'\r\nimport {Button, Typography} from '@material-ui/core'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nlet Koka = props => {\r\n\r\n    let history = useHistory()\r\n    let location = useLocation()\r\n\r\n    let goToHome = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h2\">Koka </Typography>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={() => goToHome()}>Home</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        admin: state.admin\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Koka);","import { orange, blue , teal, blueGrey } from \"@material-ui/core/colors\";\r\n\r\nexport const lightOrange = orange[600];\r\nexport const lightBlue = blue[500];\r\nexport const errorRed = \"#B00020\";\r\nexport const lightGrey = blueGrey[500];\r\nexport const veryLightGrey = blueGrey[100];","import React, { Component, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { TextField, Button, Typography } from '@material-ui/core'\r\nimport { lightOrange } from '../colors'\r\nimport Axios from 'axios'\r\nimport Apis from '../Apis'\r\nimport { setAdmin } from '../actions/admin'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const AdminLogin = props => {\r\n\r\n    const [preOtp, setPreOtp] = useState(true)\r\n    const [mobileNumber, setMobileNumber] = useState(\"\")\r\n    const [otp, setOtp] = useState(\"\")\r\n    \r\n    let history = useHistory();\r\n\r\n    let login = () => {\r\n        if (validateMobileNumber()) {\r\n            Axios.post(Apis.admin_login, {\r\n                mobileNumber: \"+91\"+mobileNumber\r\n            }).then(res => {\r\n                if (res.status == '200') {\r\n                    setPreOtp(false)\r\n                } else alert(\"Admin does not exist check mobile number\")\r\n            }).catch(err => {\r\n                alert(JSON.stringify(err))\r\n            })\r\n        }\r\n    }\r\n\r\n    let confirmOtp = () => {\r\n        if(otp !== \"\") {\r\n            Axios.post(Apis.confirm_admin_otp, {\r\n                mobileNumber: \"+91\"+mobileNumber,\r\n                otp: otp\r\n            }).then(res => {\r\n                if(res.status == '200') {\r\n                    localStorage.setItem('admin_token', res.data.token)\r\n                    props.setAdmin({...res.data.admin, token: res.data.token})\r\n                    history.push(\"/admin/dashboard\")\r\n                } else alert(res.data)\r\n            }).catch(err => {\r\n                alert(\"something went wrong\")\r\n            })\r\n        }\r\n    }\r\n\r\n    let validateMobileNumber = () => {\r\n        return true;\r\n    }\r\n\r\n    let handleMobileNumber = event => {\r\n        setMobileNumber(event.target.value)\r\n    }\r\n\r\n    let handleOtp = event => {\r\n        setOtp(event.target.value)\r\n    }\r\n    \r\n    return (\r\n        <div style={{height: '100vh', width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n            {preOtp &&\r\n                <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                    <div style={{padding: 10, textAlign: 'center'}}>\r\n                        <Typography variant='h4'>Admin Login</Typography>\r\n                    </div>\r\n                    <TextField label=\"Mobile Number\" variant=\"outlined\" value={mobileNumber} \r\n                    onChange={handleMobileNumber} />\r\n                    <Button variant=\"contained\" style={{background: lightOrange, \r\n                        color: 'white', marginTop: 10}} onClick={() => login()}>Login</Button>\r\n                </div>\r\n            }\r\n\r\n            {!preOtp &&\r\n                <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                    <div style={{padding: 10, textAlign: 'center'}}>\r\n                        <Typography variant='h4'>Admin Login</Typography>\r\n                    </div>\r\n                    <TextField label=\"Enter OTP\" variant=\"outlined\" value={otp} \r\n                    onChange={handleOtp} />\r\n                    <Button variant=\"contained\" style={{background: lightOrange, \r\n                        color: 'white', marginTop: 10}} onClick={() => confirmOtp()}>Confirm OTP</Button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setAdmin: admin => dispatch(setAdmin(admin))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminLogin)\r\n","import React, {useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppBar, Toolbar, IconButton, Typography, Button } from '@material-ui/core'\r\nimport { Menu, ExitToApp } from '@material-ui/icons'\r\nimport { setAdmin } from '../actions/admin'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { lightBlue, lightOrange } from '../colors'\r\n\r\n\r\nlet AdminDashboard = props => {\r\n\r\n    let history =  useHistory()\r\n\r\n    useEffect(() => {\r\n        if(!props.admin) {\r\n            history.push(\"/\");\r\n        }\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    let logout = () => {\r\n        localStorage.setItem('admin_token', null)\r\n        setAdmin(null)\r\n        history.push(\"/admin/login\")\r\n    }\r\n\r\n    let surveyOfficers = () => {\r\n        history.push(\"/admin/survey_officers\")\r\n    }\r\n\r\n    let areaBlocks = () => {\r\n        history.push(\"/admin/areablocks\")\r\n    }\r\n\r\n    let containmentAreas = () => {\r\n        history.push(\"/admin/containment_areas\")\r\n    }\r\n\r\n    let quarantineCenters = () => {\r\n        history.push(\"/admin/quarantine_centers\")\r\n    }\r\n\r\n    let generalReport = () => {\r\n        history.push(\"/admin/general_report\")\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '100vh'}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar style={{backgroundColor: 'green'}}>\r\n                    <IconButton edge=\"start\" aria-label=\"menu\">\r\n                        <Menu style={{color: \"white\"}} />\r\n                    </IconButton>\r\n\r\n                    <Typography variant=\"h6\" style={{flexGrow: 1, marginLeft: 15}}>\r\n                        Dashboard\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"h6\" style={{marginRight: 15}}>\r\n                        {props.admin !== null ? props.admin.name : ''}\r\n                    </Typography>\r\n\r\n                    <IconButton edge=\"end\" aria-label=\"logout\" onClick={() => logout()}>\r\n                        <ExitToApp style={{color: \"white\"}} />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <div>\r\n                <div style={{marginTop: 100, display: 'flex', flexDirection: 'column', justifyContent: 'center',\r\n                    alignItems: 'center'}}>\r\n                    <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                        color: \"#fafafa\"}} onClick={() => surveyOfficers()}>\r\n                            Survey Officers\r\n                    </Button>\r\n\r\n                    <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                        color: \"#fafafa\", marginTop: 10}} onClick={() => areaBlocks()}>Area Blocks</Button>\r\n\r\n                    <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                        color: \"#fafafa\", marginTop: 10}} onClick={() => quarantineCenters()} >Quarantine Centers</Button>\r\n\r\n                    <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                        color: \"#fafafa\", marginTop: 10}} onClick={() => containmentAreas()} >Containment Areas</Button>\r\n\r\n                    \r\n                    <div style={{height: 50}}></div>\r\n\r\n\r\n\r\n                    <Button variant=\"contained\" style={{backgroundColor: lightOrange, \r\n                        color: \"#fafafa\"}} onClick={() => generalReport()} >General Report</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        admin: state.admin\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        setAdmin: admin => dispatch(setAdmin(admin))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(AdminDashboard)","import React, {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CircularProgress, TextField, Button, IconButton, colors, Typography, Dialog } from '@material-ui/core'\r\nimport { Search, Add, Delete } from '@material-ui/icons'\r\nimport Axios from 'axios'\r\nimport Apis from '../Apis'\r\nimport { lightBlue, lightOrange, errorRed } from '../colors'\r\n\r\nlet SurveyOfficer = props => {\r\n\r\n    const [surveyOfficers, setSurveyOfficers] = useState([])\r\n    const [queryString, setQueryString] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [openAddOfficer, setOpenAddOfficer] = useState(false)\r\n    const [newOfficerName, setNewOfficerName] = useState('')\r\n    const [newOfficerAge, setNewOfficerAge] = useState('')\r\n    const [newOfficerMobileNumber, setNewOfficerMobileNumber] = useState('')\r\n    const [newOfficerAdhar, setNewOfficerAdhar] = useState('')\r\n\r\n    const [openDeleteOfficer, setOpenDeleteOfficer] = useState(false)\r\n    const [officerToDelete, setOfficerToDelete] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n            url: Apis.survey_officers,\r\n            method: 'GET'\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                setSurveyOfficers(res.data.surveyOfficers)\r\n            }\r\n        }).catch(error => {\r\n            alert(\"something went wrong\")\r\n        }).finally(() => setLoading(false))\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n\r\n    let SortedSurveyOfficers = props => {\r\n\r\n        const [officersToShow, setOfficersToShow] = useState([])\r\n\r\n        let sortedOfficers = officers => {\r\n            return props.surveyOfficers.sort((oone, otwo) => {\r\n                if(oone.name > otwo.name) return 1\r\n                else if (oone.name < otwo.name) return -1\r\n                else return 0\r\n            })\r\n        }\r\n\r\n\r\n        useEffect(() => {\r\n            \r\n            if(props.query.trim() == \"\") {\r\n                setOfficersToShow(props.surveyOfficers)\r\n            }\r\n\r\n            return () => {\r\n                \r\n            }\r\n        }, [props.query, props.surveyOfficers])\r\n\r\n\r\n        let showOfficers = sortedOfficers(officersToShow).map(officer => {\r\n            return (\r\n                <div style={{margin: 10, borderWidth: 1, borderColor: lightBlue, borderRadius: 10,\r\n                display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                    <Typography style={{width: '20%'}} variant=\"subtitle2\">{officer.name}</Typography>\r\n                    <Typography style={{width: '20%'}} variant=\"subtitle2\">{officer.mobileNumber.replace(\"+91\", \"\")}</Typography>\r\n                    <Typography style={{width: '20%'}} variant=\"subtitle2\">{officer.age}</Typography>\r\n                    <Typography style={{width: '20%'}} variant=\"subtitle2\">{officer.adhar}</Typography>\r\n                    <Button variant=\"contained\" startIcon={<Delete />}\r\n                     style={{backgroundColor: errorRed, color: '#fafafa'}} onClick={() => props.startOfficerDeletion(officer)} >\r\n                         Delete\r\n                     </Button>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div style={{padding: 10}}>\r\n                {showOfficers}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let handleQueryString = event => {\r\n        setQueryString(event.target.value)\r\n    }\r\n\r\n    let addOfficer = () => {\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n            url: Apis.add_survey_officer,\r\n            method: 'POST',\r\n            data: {\r\n                name: newOfficerName,\r\n                mobileNumber: \"+91\"+newOfficerMobileNumber,\r\n                age: newOfficerAge,\r\n                adhar: newOfficerAdhar\r\n            }\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                setSurveyOfficers([...surveyOfficers, res.data.surveyOfficer])\r\n                setNewOfficerName('')\r\n                setNewOfficerMobileNumber('')\r\n                setNewOfficerAge('')\r\n                setNewOfficerAdhar('')\r\n                \r\n                alert(\"Officer Added Successfully\")\r\n            }\r\n        }).catch(err => {\r\n            alert(\"Something went wrong\")\r\n        }).finally(() => {\r\n            setOpenAddOfficer(false)\r\n        })\r\n    }\r\n\r\n    let startOfficerDeletion = officer => {\r\n        setOfficerToDelete(officer)\r\n        setOpenDeleteOfficer(true)\r\n    }\r\n\r\n    let deleteOfficer = () => {\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n            url: Apis.delete_survey_officer,\r\n            method: 'POST',\r\n            data: {\r\n                officerId: officerToDelete._id\r\n            }\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                let officers = [...surveyOfficers]\r\n                officers.forEach((item, index) => {\r\n                    if(item._id == officerToDelete._id) {\r\n                        officers.splice(index, 1)\r\n                    }\r\n                })\r\n                setSurveyOfficers(officers)\r\n                setOfficerToDelete(null)\r\n            }\r\n        }).catch(err => alert(\"Something went wrong\"))\r\n        .finally(() => setOpenDeleteOfficer(false))\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '100vh'}}>\r\n            {loading &&\r\n                <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <CircularProgress style={{marginTop: 50}} />\r\n                </div>\r\n            }\r\n\r\n            {!loading && \r\n                <div>\r\n                    <div style={{position: 'fixed', top: 0, width: '100%', padding: 5, display: 'flex', flexDirection: 'row', flexWrap: 'wrap',\r\n                    backgroundColor: 'white'}}>\r\n                        \r\n                        <TextField variant=\"outlined\" label=\"Search Query...\" value={queryString} \r\n                        onChange={handleQueryString} />\r\n                        \r\n                        <Button variant=\"contained\" startIcon={<Search />} \r\n                        style={{backgroundColor: lightBlue, color: '#fafafa', marginLeft: 10}}>Search</Button>\r\n                        \r\n                        <Button variant=\"contained\" startIcon={<Add />} \r\n                        style={{backgroundColor: lightOrange, color: '#fafafa', marginLeft: 10}} \r\n                        onClick={() => setOpenAddOfficer(true)}>Add Survey Officer</Button>\r\n                    \r\n                    </div>\r\n                    \r\n                    <div style={{marginTop: 80}}>\r\n                        <SortedSurveyOfficers surveyOfficers={surveyOfficers} query={queryString}\r\n                         startOfficerDeletion={startOfficerDeletion} />\r\n                    </div>\r\n                \r\n                    <Dialog open={openAddOfficer} onClose={() => setOpenAddOfficer(false)} >\r\n                        <div style={{padding: 20}}>\r\n                            <div style={{display: 'flex', flexDirection:\"column\"}}>\r\n                                <TextField variant=\"outlined\" label=\"Name\" value={newOfficerName} onChange={event => setNewOfficerName(event.target.value)} />\r\n                                <TextField variant=\"outlined\" label=\"Mobile Number\" value={newOfficerMobileNumber} onChange={event => setNewOfficerMobileNumber(event.target.value)} style={{marginTop: 10}} />\r\n                                <TextField variant=\"outlined\" label=\"Age\" value={newOfficerAge} type=\"number\" onChange={event => setNewOfficerAge(event.target.value)} style={{marginTop: 10}}/>\r\n                                <TextField variant=\"outlined\" label=\"Adhar Card Number\" value={newOfficerAdhar} onChange={event => setNewOfficerAdhar(event.target.value)} style={{marginTop: 10}}/>\r\n                                <div style={{marginTop: 20, display: 'flex', flexDirection: 'row', \r\n                                    justifyContent:\"flex-end\"}}>\r\n                                        <Button variant=\"contained\" style={{backgroundColor: lightBlue,\r\n                                        color: '#fafafa'}} onClick={() => addOfficer()}>\r\n                                            Add Officer\r\n                                        </Button>\r\n\r\n                                        <Button variant=\"text\" style={{color: lightBlue}} \r\n                                        onClick={() => setOpenAddOfficer(false)}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog open={openDeleteOfficer} onClose={() => setOpenDeleteOfficer(false)} >\r\n                        <div style={{padding: 20, display: 'flex', flexDirection: 'column'}} >\r\n                            <Typography variant=\"subtitle2\">\r\n                                Are you sure to delete {(officerToDelete != null) ? officerToDelete.name : ''}\r\n                            </Typography>\r\n                            <div style={{padding: 10, display: 'flex', flexDirection: 'row', alignItems: 'center'}} >\r\n                                <Button variant=\"contained\" style={{backgroundColor: errorRed, \r\n                                    color: '#fafafa'}} onClick={() => deleteOfficer()} >\r\n                                        Yes, Delete\r\n                                </Button>\r\n                                <Button variant=\"text\" style={{color: errorRed, marginLeft: 10}}\r\n                                 onClick={() => setOpenDeleteOfficer(false)} >\r\n                                     Cancel\r\n                                 </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                </div>\r\n            }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        admin: state.admin\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SurveyOfficer)","import React, {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { TextField, Button, CircularProgress, Dialog, Typography } from '@material-ui/core'\r\nimport { Add, Delete } from '@material-ui/icons'\r\nimport { lightBlue, errorRed } from '../colors'\r\nimport Axios from 'axios'\r\nimport Apis from '../Apis'\r\n\r\n\r\nlet AreaBlocks = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [blocks, setBlocks] = useState([])\r\n\r\n    const [newBlock, setNewBlock] = useState(\"\")\r\n    const [openDeleteBlock, setOpenDeleteBlock] = useState(false)\r\n    const [blockToDelete, setBlockToDelete] = useState(null)\r\n\r\n    useEffect(() => {\r\n        loadBlocks()\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    let loadBlocks = () => {\r\n        setLoading(true)\r\n        Axios.get(Apis.area_blocks).then(res => {\r\n            if(res.status == '200') {\r\n                setBlocks(res.data.blocks)\r\n            }\r\n        }).catch(err => alert(\"Something went wrong\"))\r\n        .finally(() => setLoading(false))\r\n    }\r\n\r\n    let sortBlocks = blocks => {\r\n        return blocks.sort((bone, btwo) => {\r\n            if(bone.name > btwo.name) return 1\r\n            else if (bone.name < btwo.name) return -1\r\n            else return 0\r\n        })\r\n    }\r\n\r\n    let addNewBlock = () => {\r\n        if(newBlock.trim() == \"\") alert(\"Please Provide A Name\")\r\n        else Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n            url: Apis.add_block,\r\n            method: 'POST',\r\n            data: {\r\n                name: newBlock\r\n            }\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                setBlocks([...blocks, res.data.block])\r\n                setNewBlock(\"\")\r\n            }\r\n        }).catch(err => alert(\"Something went wrong\"))\r\n    }\r\n\r\n    let startBlockDeletion = block => {\r\n        setBlockToDelete(block)\r\n        setOpenDeleteBlock(true)\r\n    }\r\n\r\n\r\n    let deleteBlock = () => {\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n            url: Apis.delete_block,\r\n            method: 'POST',\r\n            data: {\r\n                blockId: blockToDelete._id\r\n            }\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                let currentBlocks = [...blocks]\r\n                currentBlocks.forEach((item, index) => {\r\n                    if(item._id == blockToDelete._id) currentBlocks.splice(index, 1)\r\n                })\r\n\r\n                setBlocks(currentBlocks)\r\n                setBlockToDelete(null)\r\n            }\r\n        }).catch(err => alert(\"Something went wrong\"))\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '100vh'}}>\r\n            {loading &&\r\n                <div style={{height: 500, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <CircularProgress />\r\n                </div>\r\n            }\r\n\r\n            {!loading &&\r\n                <div>\r\n                    <div style={{position: \"fixed\", top: 0, width: '100%', backgroundColor: 'white', \r\n                    display: 'flex', flexDirection: 'row', padding: 10, zIndex: 10}}>\r\n                        <TextField variant=\"outlined\" label=\"Enter Area Block\" value={newBlock} onChange={event => setNewBlock(event.target.value)} />\r\n                        <Button variant=\"contained\" startIcon={<Add />} style={{backgroundColor: lightBlue, \r\n                            color: \"#fafafa\", marginLeft: 10}} onClick={() => addNewBlock()} >ADD AREA BLOCK</Button>\r\n                    </div>\r\n        \r\n                    <div>\r\n                        <div style={{marginTop: 80}}>\r\n                            {sortBlocks(blocks).map(block => (\r\n                                <div style={{padding: 10, display: 'flex', flexDirection: 'row'}} >\r\n                                    <Typography variant=\"h6\" >{block.name}</Typography>\r\n                                    <Button variant=\"contained\" startIcon={<Delete />} style={{\r\n                                        backgroundColor: errorRed, color: \"#fafafa\", marginLeft: 10\r\n                                    }} onClick={() => startBlockDeletion(block)} >\r\n                                        Delete\r\n                                    </Button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Dialog open={openDeleteBlock} onClick={() => setOpenDeleteBlock(false)} >\r\n                        <div style={{padding: 20}}>\r\n                            <Typography variant=\"subtitle2\">\r\n                                Are you sure to delete {(blockToDelete !== null) ? blockToDelete.name : ''}\r\n                            </Typography>\r\n                            <div style={{marginTop: 15, display: \"flex\", flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n                                <Button variant=\"contained\" style={{backgroundColor: errorRed, color: \"#fafafa\"}} \r\n                                onClick={() => deleteBlock()}>\r\n                                    Yes, Delete\r\n                                </Button>\r\n                                <Button variant=\"text\" style={{color: errorRed}} onClick={() => setOpenDeleteBlock(false)} >Cancel</Button>\r\n                            </div>        \r\n                        </div>\r\n                    </Dialog>\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        admin: state.admin\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AreaBlocks)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Axios from 'axios'\r\nimport Apis from '../Apis'\r\nimport { CircularProgress, Button, Dialog, TextField, Switch, Typography, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core'\r\nimport { Add, Save, Edit, Delete } from '@material-ui/icons'\r\nimport { lightBlue, lightOrange, errorRed } from '../colors'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nlet ContainmentAreas = props => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [containmentAreas, setContainmentAreas] = useState([])\r\n\r\n    const [openAddContainmentArea, setOpenAddContainmentArea] = useState(false)\r\n    const [openEditContainmentArea, setOpenEditContainmentArea] = useState(false)\r\n    const [openDeleteArea, setOpenDeleteArea] = useState(false)\r\n    const [areaToEdit, setAreaToEdit] = useState(null)\r\n\r\n    const [newBlockName, setNewBlockName] = useState(\"\")\r\n    const [blocks, setBlocks] = useState([])\r\n    const [containmentStatus, setContainmentStatus] = useState(true)\r\n\r\n    const [block, setBlock] = useState(null)\r\n\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        loadContainmentAreas()\r\n        loadBlocks()\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    let loadContainmentAreas = () => {\r\n        setLoading(true)\r\n        Axios.get(Apis.containment_areas).then(res => {\r\n            if(res.status == '200') {\r\n                setContainmentAreas(res.data.containment_areas)\r\n            }\r\n        }).catch(err => alert(\"Something went wrong\"))\r\n        .finally(() => setLoading(false))\r\n    }\r\n\r\n    let loadBlocks = () => {\r\n        Axios.get(Apis.area_blocks).then(res => {\r\n            if (res.status == '200') {\r\n                setBlocks(res.data.blocks)\r\n            }\r\n        }).catch(err => alert(\"Failed To Load Blocks\"))\r\n    }\r\n\r\n\r\n    let sortByName = areas => {\r\n        return areas.sort((aone, atwo) => {\r\n            if(aone.name > atwo.name) return 1\r\n            else if(aone.name < atwo.name) return -1\r\n            else return 0\r\n        })\r\n    }\r\n\r\n    let addContainmentArea = () => {\r\n        //history.push(\"/admin/add_containment_area\")\r\n        setOpenAddContainmentArea(true)\r\n    }\r\n\r\n    let saveContainmentArea = () => {\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n\r\n            url: Apis.add_containment_area,\r\n            method: 'POST',\r\n            data: {\r\n                name: newBlockName,\r\n                block: block._id,\r\n                blockName: block.name,\r\n                containmentStatus: containmentStatus\r\n            }\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                setContainmentAreas([...containmentAreas, res.data.containment_area])\r\n                setNewBlockName(\"\")\r\n                setBlock(null)\r\n                setContainmentStatus(true)\r\n                \r\n                alert(\"Containment Area Created\")\r\n            }\r\n        }).catch(err => alert(\"Something went wrong\"))\r\n        .finally(() => setOpenAddContainmentArea(false))\r\n    }\r\n\r\n    let startEditingArea = area => {\r\n        setAreaToEdit(area)\r\n        setNewBlockName(area.name)\r\n        setBlock(blocks.find(blk => {if(blk._id == area.block) return blk}))\r\n        setContainmentStatus(area.containmentStatus)\r\n        setOpenEditContainmentArea(true)\r\n    }\r\n\r\n    let cancelEditingArea = area => {\r\n        setAreaToEdit(null)\r\n        setNewBlockName(\"\")\r\n        setBlock(null)\r\n        setContainmentStatus(true)\r\n        setOpenEditContainmentArea(false)\r\n    }\r\n\r\n    let edit = () => {\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n\r\n            url: Apis.edit_containment_area,\r\n            method: 'POST',\r\n            data: {\r\n                areaId: areaToEdit._id,\r\n                name: newBlockName,\r\n                block: block._id,\r\n                blockName: block.name,\r\n                containmentStatus: containmentStatus\r\n            }\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                let areas =  [...containmentAreas]\r\n                areas.forEach((area, index) => {\r\n                    if(area._id == areaToEdit._id) areas.splice(index, 1, res.data.area)\r\n                })\r\n                setContainmentAreas(areas)\r\n                setAreaToEdit(null)\r\n                setNewBlockName(\"\")\r\n                setBlock(null)\r\n                setContainmentStatus(true)\r\n                \r\n                alert(\"Containment Area Edited\")\r\n            }\r\n        }).catch(err => alert(\"Something went wrong\"))\r\n        .finally(() => setOpenEditContainmentArea(false))\r\n    }\r\n\r\n    let startDeletingArea = area => {\r\n        setAreaToEdit(area)\r\n        setOpenDeleteArea(true)\r\n    }\r\n\r\n    let cancelDeletingArea = () => {\r\n        setAreaToEdit(false)\r\n        setOpenDeleteArea(false)\r\n    }\r\n\r\n    let deleteArea = () => {\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n            url: Apis.delete_containment_area,\r\n            method: 'POST',\r\n            data: {\r\n                areaId: areaToEdit._id\r\n            }\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                let areas = [...containmentAreas]\r\n                areas.forEach((area, index) => {\r\n                    if(area._id == areaToEdit._id) areas.splice(index, 1)\r\n                })\r\n\r\n                setContainmentAreas(areas)\r\n                alert(\"Containment Area Deleted\")\r\n            }\r\n        }).catch(err => alert(\"Soemthing went wrong\"))\r\n        .finally(() => {\r\n            setOpenDeleteArea(false)\r\n            setAreaToEdit(null)\r\n        })\r\n    }\r\n\r\n    let addContainmentSource = area => {\r\n        history.push(\"/admin/add_containment_source/\", area)\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '100vh'}} >\r\n            {loading &&\r\n                <div style={{height: 500, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <CircularProgress />\r\n                </div>\r\n            }\r\n\r\n            {!loading &&\r\n                <div>\r\n                    <div style={{position: 'fixed', top: 0, padding: 10, display: 'flex', width: '100%', \r\n                    flexDirection: 'row', zIndex: 10, backgroundColor: 'white'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue,\r\n                        color: '#fafafa' }} startIcon={<Add />} onClick={() => addContainmentArea()} >\r\n                            Add New Containment Area\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div style={{marginTop: 80}}>\r\n                        {sortByName(containmentAreas).map(area => (\r\n                            <div style={{padding: 10, display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-around' }}>\r\n                                <Typography variant=\"subtitle2\" >{area.name}</Typography>\r\n                                <Typography variant=\"subtitle2\" >{area.blockName}</Typography>\r\n                                <Button variant=\"contained\" startIcon={<Edit/>} \r\n                                style={{backgroundColor: lightOrange, color: '#fafafa'}}\r\n                                onClick={() => startEditingArea(area)} >\r\n                                    Edit\r\n                                </Button>\r\n\r\n                                <Button variant=\"contained\" startIcon={<Add/>} \r\n                                style={{backgroundColor: lightBlue, color: '#fafafa'}} \r\n                                onClick={() => addContainmentSource(area)}>\r\n                                    Add Containment Source Persons\r\n                                </Button>\r\n\r\n                                <Button variant=\"contained\" startIcon={<Delete/>} \r\n                                style={{backgroundColor: errorRed, color: '#fafafa'}} \r\n                                onClick={() => startDeletingArea(area)} >\r\n                                    Delete\r\n                                </Button>\r\n\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <Dialog open={openAddContainmentArea} onClose={() => setOpenAddContainmentArea(false)} >\r\n                        <div style={{padding: 20,display: 'flex', flexDirection: 'column', justifyContent: 'center', width: 250}}>\r\n                            <TextField variant=\"outlined\" label=\"Name\" value={newBlockName} onChange={event => setNewBlockName(event.target.value)} />\r\n                            <FormControl variant=\"outlined\" style={{marginTop: 10}} >\r\n                                <InputLabel id=\"select-label\" >Area Block</InputLabel>\r\n                                <Select labelId=\"select-label\" label=\"Area Block\" value={block} onChange={event => \r\n                                    setBlock(event.target.value)} >\r\n                                    {sortByName(blocks).map(block => (\r\n                                        <MenuItem value={block}>{block.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', padding: 10}}>\r\n                                <Typography variant=\"subtitle2\">Containment Status</Typography>\r\n                                <Switch checked={containmentStatus} onChange={event => setContainmentStatus(event.target.checked)}\r\n                                />\r\n                            </div>\r\n                            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                                <Button variant=\"contained\" style={{backgroundColor: lightBlue, color: '#fafafa'}}\r\n                                startIcon={<Save />} onClick={() => saveContainmentArea()} >\r\n                                    Save\r\n                                </Button>\r\n\r\n                                <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}}\r\n                                onClick={() => setOpenAddContainmentArea(false)} >\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog open={openEditContainmentArea} onClose={() => cancelEditingArea()} >\r\n                        <div style={{padding: 20,display: 'flex', flexDirection: 'column', justifyContent: 'center', width: 250}}>\r\n                            <TextField variant=\"outlined\" label=\"Name\" value={newBlockName} onChange={event => setNewBlockName(event.target.value)} />\r\n                            <FormControl variant=\"outlined\" >\r\n                                <InputLabel id=\"select-label\" >Area Block</InputLabel>\r\n                                <Select labelId=\"select-label\" label=\"Area Block\" value={block} onChange={event => \r\n                                    setBlock(event.target.value)} style={{marginTop: 10}} >\r\n                                    {sortByName(blocks).map(block => (\r\n                                        <MenuItem value={block}>{block.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', padding: 10}}>\r\n                                <Typography variant=\"subtitle2\">Containment Status</Typography>\r\n                                <Switch checked={containmentStatus} onChange={event => setContainmentStatus(event.target.checked)}\r\n                                />\r\n                            </div>\r\n                            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                                <Button variant=\"contained\" style={{backgroundColor: lightBlue, color: '#fafafa'}}\r\n                                startIcon={<Save />} onClick={() => edit()} >\r\n                                    Save\r\n                                </Button>\r\n\r\n                                <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}}\r\n                                onClick={() => cancelEditingArea()} >\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog open={openDeleteArea} onClose={() => cancelDeletingArea()} >\r\n                        <div style={{padding: 20}}>\r\n                            <Typography>Are sure you want to delete {(areaToEdit !== null) ? areaToEdit.name : '' } </Typography>\r\n                            <div>\r\n                                <Button variant=\"contained\" style={{backgroundColor: errorRed, \r\n                                    color: '#fafafa'}} onClick={() => deleteArea()} >\r\n                                    Yes, Delete\r\n                                </Button>\r\n                                <Button variant=\"text\" style={{color: errorRed}} onClick={() => cancelDeletingArea()} >\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        admin: state.admin\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContainmentAreas)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, CircularProgress, Dialog, TextField, FormControl, InputLabel, Select, MenuItem, Typography } from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons'\r\nimport { lightBlue, lightOrange, errorRed } from '../colors'\r\nimport Axios from 'axios'\r\nimport Apis from '../Apis'\r\n\r\n\r\nlet QuarantineCenters = props => {\r\n\r\n    const [loading, setloading] = useState(false)\r\n    const [quarantineCenters, setQuarantineCenters] = useState([])\r\n    const [blocks, setBlocks] = useState([])\r\n\r\n    const [block, setBlock] = useState(null)\r\n    const [name, setName] = useState('')\r\n    const [address, setAddress] = useState('')\r\n\r\n    const [openAddQuarantine, setOpenAddQuarantine] = useState(false)\r\n\r\n    useEffect(() => {\r\n        loadQuarantineCenters()\r\n        loadingBlocks()\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    let loadQuarantineCenters = () => {\r\n        setloading(true)\r\n        Axios.get(Apis.quarantine_centers).then(res => {\r\n            if(res.status == '200') {\r\n                setQuarantineCenters(res.data.quarantine_centers)\r\n            }\r\n        }).catch(error => alert(\"Something went wrong\"))\r\n        .finally(() => {\r\n            setloading(false)\r\n        })\r\n    }\r\n\r\n    let loadingBlocks = () => {\r\n        setloading(true)\r\n        Axios.get(Apis.area_blocks).then(res => {\r\n            if(res.status == '200') {\r\n                setBlocks(res.data.blocks)\r\n            }\r\n        }).catch(err => alert(\"Failed to load blocks\"))\r\n        .finally(() => setloading(false))\r\n    }\r\n\r\n    let sortByName = arr => arr.sort((aone, atwo) => {\r\n        if(aone.name > atwo.name) return 1\r\n        else if (aone.name < atwo.name) return -1\r\n        else return 0\r\n    })\r\n\r\n    let addQuarantineCenter = () => {\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n            url: Apis.add_quarantine_center,\r\n            method: 'POST',\r\n            data: {\r\n                name: name,\r\n                address: address\r\n            }\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                setQuarantineCenters([...quarantineCenters, res.data.quarantine_center])\r\n                window.alert(\"Quarantine Center added\")\r\n                setOpenAddQuarantine(false)\r\n            }\r\n        }).catch(err => console.log(err))\r\n        .finally(() => {\r\n            setName(\"\")\r\n            setAddress('')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && \r\n                <div style={{padding: 50, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <CircularProgress />\r\n                </div>\r\n            }\r\n            {!loading &&\r\n                <div>\r\n                    <div style={{position: 'fixed', top: 0, width: '100%', padding: 10, backgroundColor: 'white', \r\n                    display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, color: '#fafafa'}} \r\n                        startIcon={<Add />} onClick={() => setOpenAddQuarantine(true)} >\r\n                            Add Quarantine Center\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div style={{marginTop: 80}}>\r\n                            {sortByName(quarantineCenters).map(center => (\r\n                                <div style={{padding: 10, display: 'flex', flexDirection: 'row',\r\n                                alignItems: 'center' }} >\r\n                                    <Typography variant=\"subtitle2\" >{center.name}</Typography>\r\n                                    <Typography variant=\"subtitle2\" style={{marginLeft: 30}}>{center.address}</Typography>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Dialog open={openAddQuarantine} onClose={() => setOpenAddQuarantine(false)} >\r\n                        <div style={{padding: 20,display: 'flex', flexDirection: 'column', justifyContent: 'center', width: 250}}>\r\n                            <TextField variant=\"outlined\" label=\"Name\" value={name} onChange={event => setName(event.target.value)} ></TextField>\r\n                            {/* <FormControl variant=\"outlined\" style={{marginTop: 10}} >\r\n                                <InputLabel id=\"selectOne\">Area Block</InputLabel>\r\n                                <Select labelId=\"selectOne\" label=\"Area Block\" value={block} \r\n                                onChange={event => setBlock(event.target.value)} >\r\n                                    {sortByName(blocks).map(block => (\r\n                                        <MenuItem value={block} >{block.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl> */}\r\n                            <TextField variant=\"outlined\" label=\"Address\" value={address} onChange={event => setAddress(event.target.value)} style={{marginTop: 10}} />\r\n                            <div style={{marginTop: 10, display: 'flex', flexDirection: 'row'}}>\r\n                                <Button variant=\"contained\" style={{backgroundColor: lightBlue,\r\n                                     color: '#fafafa'}} onClick={() => addQuarantineCenter()} >\r\n                                    Create\r\n                                </Button>\r\n                                <Button variant=\"text\" style={{marginLeft: 10, color: lightBlue}}\r\n                                onClick={() => setOpenAddQuarantine(false)} >\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        admin: state.admin\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuarantineCenters)","import React, { useState, useEffect, useReducer } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Typography, TextField, Select, MenuItem, Switch, Button, FormControlLabel, Paper, \r\n    FormControl, InputLabel, Dialog, Checkbox } from '@material-ui/core'\r\nimport { Save, Add } from '@material-ui/icons'\r\nimport { lightBlue, lightGrey } from '../colors'\r\nimport Axios from 'axios'\r\nimport Apis from '../Apis'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\n\r\n\r\nlet AddContainmentSource = props => {\r\n\r\n    const [containmentArea, setContainmentArea] = useState(null)\r\n    const [containmentSources, setContainmentSources] = useState([])\r\n\r\n    const [allContainmentSources, setAllContainmentSources] = useState([])\r\n\r\n    const [query, setQuery] = useState('')\r\n    const [queryCriteria, setQueryCriteria] = useState('')\r\n\r\n    const [openAddNewSource, setOpenAddNewSource] = useState(false)\r\n    const [blocks, setblocks] = useState([])\r\n    const [block, setblock] = useState(null)\r\n    const [quarantineCenters, setQuarantineCenters] = useState([])\r\n    const [qCenter, setQCenter] = useState(null)\r\n\r\n    let newSourceInit = {\r\n        name: '', mobileNumber: '', age: null, address: '', block: '', blockName: '',\r\n        adhar: '', familyHead: '', traveledFrom: '', arrivalDate: null, quarantineDate: null,\r\n        releaseDate: null, quarantineCenter: '', quarantineCenterName: ''\r\n    }\r\n\r\n    let newSourceReducer = (state, action) => {\r\n        let type = action.type;\r\n        if(type == 'setName') state = {...state, name: action.payload}\r\n        else if(type == 'setMobileNumber') state = {...state, mobileNumber: action.payload}\r\n        else if(type == 'setAge') state = {...state, age: action.payload}\r\n        else if(type == 'setAddress') state = {...state, address: action.payload}\r\n        else if(type == 'setBlock') state = {...state, block: action.payload._id, blockName: action.payload.name}\r\n        else if(type == 'setAdhar') state = {...state, adhar: action.payload}\r\n        else if(type == 'setFamilyHead') state = {...state, familyHead: action.payload}\r\n        else if(type == 'setTraveledFrom') state = {...state, traveledFrom: action.payload}\r\n        else if(type == 'setArrivalDate') state = {...state, arrivalDate: action.payload}\r\n        else if(type == 'setQuarantineDate') state = {...state, quarantineDate: action.payload}\r\n        else if(type == 'setReleaseDate') state = {...state, releaseDate: action.payload}\r\n        else if(type == 'setQuarantineCenter') state = {...state, quarantineCenter: action.payload._id, quarantineCenterName: action.payload.name}\r\n        return state\r\n    }\r\n\r\n    const [newSource, newSourceDispatch] = useReducer(newSourceReducer, newSourceInit)\r\n\r\n\r\n    let location = useLocation()\r\n\r\n    useEffect(() => {\r\n        setContainmentArea(location.state)\r\n        loadAllContainmentSources()\r\n        loadBlocks()\r\n        loadQuarantineCenters()\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(containmentArea) {\r\n            setContainmentSources(containmentArea.containmentSources)\r\n        }\r\n        return () => {\r\n            \r\n        }\r\n    }, [containmentArea])\r\n\r\n\r\n    let loadBlocks = () => {\r\n        Axios.get(Apis.area_blocks).then(res => {\r\n            if(res.status == '200') {\r\n                setblocks(res.data.blocks)\r\n            }\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    let loadQuarantineCenters = () => {\r\n        Axios.get(Apis.quarantine_centers).then(res => {\r\n            if(res.status == '200') {\r\n                setQuarantineCenters(res.data.quarantine_centers)\r\n            }\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    let loadAllContainmentSources = () => {\r\n        Axios.get(Apis.containment_sources).then(res => {\r\n            if(res.status == '200') {\r\n                setAllContainmentSources(res.data.containment_sources)\r\n            }\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    let isSourceSelected = source => {\r\n        let x = containmentSources.find(src => {\r\n            if(src == source._id) return src\r\n        })\r\n\r\n        if(x) return true;\r\n        else return false;\r\n    }\r\n\r\n    let toggleSourceSelection = source => {\r\n        if(isSourceSelected(source)) {\r\n            let sSrcs = [...containmentSources]\r\n            sSrcs.forEach((src, index) => {\r\n                if(src == source._id) sSrcs.splice(index, 1)\r\n            })\r\n\r\n            setContainmentSources(sSrcs)\r\n        } else {\r\n            setContainmentSources([...containmentSources, source._id])\r\n        }\r\n    }\r\n\r\n    let sortByName = inputArray => {\r\n        return inputArray.sort((aone, atwo) => {\r\n            if(aone.name > atwo.name) return 1\r\n            else if (aone.name < atwo.name) return -1\r\n            else return 0\r\n        })\r\n    }\r\n\r\n\r\n    let containmentSourcesQuried = (sources, query, criteria) => {\r\n        return allContainmentSources;\r\n    }\r\n\r\n\r\n    let save = () => {\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n            url: Apis.attach_containment_sources,\r\n            method: 'POST',\r\n            data: {\r\n                areaId: containmentArea._id,\r\n                containmentSources: containmentSources\r\n            }\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                alert(\"Changes Saved\")\r\n            }\r\n        }).catch(err => alert(\"Something went wrong\"))\r\n    }\r\n\r\n    let createContainmentSource = () => {\r\n        if(validInputForSource()) {\r\n            Axios({\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer '+props.admin.token\r\n                },\r\n                url: Apis.add_containment_source,\r\n                method: 'POST',\r\n                data: {\r\n                    ...newSource\r\n                }\r\n            }).then(res => {\r\n                if(res.status == '200') {\r\n                    setContainmentSources([...containmentSources, res.data.source._id])\r\n                    setAllContainmentSources([...allContainmentSources, res.data.source])\r\n                    alert(\"Containment Source Created\")\r\n                }\r\n            }).catch(err => console.log(err))\r\n            .finally(() => setOpenAddNewSource(false))\r\n        }\r\n    }\r\n\r\n    let validInputForSource = () => {\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '100vh'}}>\r\n            <div style={{position: 'fixed', top: 0, padding: 20, display: 'flex', alignItems: 'center', backgroundColor: 'white', zIndex: 10}}>\r\n                <Typography variant=\"h4\" style={{color: lightBlue}}>Add Containment Source Persons to {containmentArea !== null ? containmentArea.name : ''}</Typography>\r\n            </div>\r\n\r\n            <div style={{position: 'fixed', top: 80, padding: 10, display: 'flex', flexDirection: 'column', justifyContent: 'center', width: '100%'}}>\r\n                <div style={{padding: 10, display: 'flex', flexDirection: 'row'}}>\r\n                    <TextField variant=\"outlined\" label=\"Search Query\" />\r\n                    <FormControl variant=\"outlined\" style={{marginLeft: 10, width: 200}} >\r\n                        <InputLabel id=\"selectCriteria\" >Select Criteria</InputLabel>\r\n                        <Select labelId=\"selectCriteria\" label=\"Select Criteria\" >\r\n                            <MenuItem value=\"name\" >Name</MenuItem>\r\n                            <MenuItem value=\"mobile_number\" >Mobile Number</MenuItem>\r\n                            <MenuItem value=\"adhar\" >Adhar Card Number</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <div style={{marginLeft: 10, display: 'flex', justifyContent: 'center'}}>\r\n                        <Button variant=\"contained\" startIcon={<Add/>} style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa'}} onClick={() => setOpenAddNewSource(true)} >\r\n                                Add New Containment Source Person\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Paper style={{maxHeight: 450, overflow: 'auto', padding: 10}} >\r\n                    {(allContainmentSources.length == 0) &&\r\n                        <div style={{padding: 10, display: 'flex', justifyContent: 'center', alignItems: 'center'}} >\r\n                            <Typography variant=\"h5\" style={{color: lightGrey}} >Add Containment Source Persons</Typography>\r\n                        </div>\r\n                    } \r\n                    {(allContainmentSources.length != 0) &&\r\n                        <div>\r\n                            {sortByName(containmentSourcesQuried(containmentSources, query, queryCriteria)).map(source => (\r\n                                <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', padding: 10,\r\n                                justifyContent: 'space-around'}} >\r\n                                    <FormControl style={{width: '10%'}} >\r\n                                        <Checkbox checked={isSourceSelected(source)} onChange={() => toggleSourceSelection(source)} />\r\n                                    </FormControl>\r\n                                    <Typography variant=\"subtitle2\" style={{width: '18%'}}>{source.name}</Typography>\r\n                                    <Typography variant=\"subtitle2\" style={{width: '18%'}}>{source.mobileNumber}</Typography>\r\n                                    <Typography variant=\"subtitle2\" style={{width: '18%'}}>{source.age}</Typography>\r\n                                    <Typography variant=\"subtitle2\" style={{width: '18%'}}>{source.address}</Typography>\r\n                                    <Typography variant=\"subtitle2\" style={{width: '18%'}}>{source.familyHead}</Typography>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n                </Paper>\r\n\r\n                <div style={{padding: 20, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <Button variant=\"contained\" style={{backgroundColor: lightGrey, color: '#fafafa'}}\r\n                    startIcon={<Save />} onClick={() => save()} >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog open={openAddNewSource} onClose={() => setOpenAddNewSource(false)} >\r\n                <div style={{padding: 10}}>\r\n                    <Paper style={{maxHeight: 450, width: 500, overflow: 'auto'}}>\r\n                        <div style={{display: 'flex', flexDirection: 'column'}} >\r\n                            <TextField variant=\"outlined\" label=\"Name\" value={newSource.name}\r\n                             onChange={event => newSourceDispatch({type: 'setName',\r\n                              payload: event.target.value})} />\r\n\r\n                            <TextField variant=\"outlined\" label=\"Mobile Number\" \r\n                            style={{marginTop: 10}} value={newSource.mobileNumber} onChange={event => \r\n                            newSourceDispatch({type: 'setMobileNumber', payload: event.target.value})} />\r\n                            \r\n                            <TextField variant=\"outlined\" label=\"Age\" type=\"number\" style={{marginTop: 10}}\r\n                            value={newSource.age} onChange={event => newSourceDispatch({type: 'setAge', payload: event.target.value})} />\r\n                            \r\n                            <TextField variant=\"outlined\" label=\"Address\" style={{marginTop: 10}}\r\n                            value={newSource.address} onChange={event => newSourceDispatch({type: 'setAddress', payload: event.target.value})} />\r\n                            \r\n                            <FormControl variant=\"outlined\" style={{marginTop: 10}} >\r\n                                <InputLabel id=\"selectBlock\" >Block</InputLabel>\r\n                                <Select labelId=\"selectBlock\" label=\"Block\"\r\n                                 value={block} onChange={event => {newSourceDispatch({type: 'setBlock', payload: event.target.value}); setblock(event.target.value)}} >\r\n                                    {sortByName(blocks).map(blck => (\r\n                                        <MenuItem value={blck} >{blck.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                            \r\n                            <TextField variant=\"outlined\" label=\"Adhar Card Number\" style={{marginTop: 10}} \r\n                            value={newSource.adhar} onChange={event => newSourceDispatch({type: 'setAdhar', payload: event.target.value})} />\r\n                            \r\n                            <TextField variant=\"outlined\" label=\"Family Head\" style={{marginTop: 10}} \r\n                            value={newSource.familyHead} onChange={event => newSourceDispatch({type: 'setFamilyHead', payload: event.target.value})} />\r\n                            \r\n                            <TextField variant=\"outlined\" label=\"Traveled From\" style={{marginTop: 10}} \r\n                            value={newSource.traveledFrom} onChange={event => newSourceDispatch({type: 'setTraveledFrom', payload: event.target.value})} />\r\n                            \r\n                            <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', marginTop: 10}} >\r\n                                <Typography variant=\"subtitle2\" style={{marginLeft: 10, marginRight: 10}} >Arrival Date</Typography>\r\n                                <TextField type=\"date\" variant=\"outlined\"  \r\n                                value={newSource.arrivalDate} onChange={event => \r\n                                newSourceDispatch({type: 'setArrivalDate', payload: event.target.value})} />\r\n                            </div>\r\n                            \r\n                            <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', marginTop: 10}} >\r\n                                <Typography variant=\"subtitle2\" style={{marginLeft: 10, marginRight: 10}} >Quarantine Date</Typography>\r\n                                <TextField type=\"date\" variant=\"outlined\" \r\n                                value={newSource.quarantineDate} onChange={event => newSourceDispatch({type: 'setQuarantineDate', \r\n                                payload: event.target.value})} />\r\n                            </div>\r\n                            \r\n                            <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', marginTop: 10}} >\r\n                                <Typography variant=\"subtitle2\" style={{marginLeft: 10, marginRight: 10}} >Release Date</Typography>\r\n                                <TextField type=\"date\" variant=\"outlined\" \r\n                            value={newSource.releaseDate} onChange={event => newSourceDispatch({type: 'setReleaseDate', payload: event.target.value})} />\r\n                            </div>\r\n                            \r\n                            <FormControl variant=\"outlined\" style={{marginTop: 10}} >\r\n                                <InputLabel id=\"selectQC\" >Quarantine Center</InputLabel>\r\n                                <Select labelId=\"selectQC\" label=\"Quarantine Center\"\r\n                                 value={qCenter} onChange={event => \r\n                                 {\r\n                                     newSourceDispatch({type: 'setQuarantineCenter', payload: event.target.value});\r\n                                     setQCenter(event.target.value)\r\n                                 }} >\r\n                                    {sortByName(quarantineCenters).map(qc => (\r\n                                        <MenuItem value={qc} >{qc.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </Paper>\r\n                    <div style={{padding: 10, display: 'flex', justifyContent: 'center'\r\n                        , alignItems: 'center' }} >\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightGrey, color: '#fafafa'}} \r\n                         onClick={() => createContainmentSource()} >\r\n                            Create Containment Source Person\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        admin: state.admin\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddContainmentSource)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Typography } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport Apis from '../../Apis'\r\nimport { setSurveyOfficer } from '../../actions/survey_officer'\r\n\r\n\r\nlet Main = props => {\r\n\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem('survey_officer_token')\r\n\r\n        if(token) {\r\n            Axios({\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer '+token\r\n                },\r\n                url: Apis.validate_survey_token,\r\n                method: 'POST'\r\n            }).then(res => {\r\n                if(res.status == '200') {\r\n                    props.setSurveyOfficer(res.data.officer)\r\n                    history.push(\"/survey/dashboard\")\r\n                } else history.push(\"/survey/login\")\r\n            }).catch(err => {\r\n                console.log(err)\r\n                history.push(\"/survey/login\")\r\n            })\r\n        } else {\r\n            history.push(\"/survey/login\")\r\n        }\r\n\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center'}} >\r\n            <Typography variant=\"h4\" >LOGO</Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        officer: state.survey_officer\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch=> {\r\n    return {\r\n        setSurveyOfficer: officer => dispatch(setSurveyOfficer(officer))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Main)","import React, { Component, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { TextField, Button, Typography } from '@material-ui/core'\r\nimport { lightOrange } from '../../colors'\r\nimport Axios from 'axios'\r\nimport Apis from '../../Apis'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { setSurveyOfficer } from '../../actions/survey_officer'\r\n\r\nlet Login = props => {\r\n\r\n    const [preOtp, setPreOtp] = useState(true)\r\n    const [mobileNumber, setMobileNumber] = useState(\"\")\r\n    const [otp, setOtp] = useState(\"\")\r\n    \r\n    let history = useHistory();\r\n\r\n    let login = () => {\r\n        if (validateMobileNumber()) {\r\n            Axios.post(Apis.survey_officer_login , {\r\n                mobileNumber: \"+91\"+mobileNumber\r\n            }).then(res => {\r\n                if (res.status == '200') {\r\n                    setPreOtp(false)\r\n                } else alert(\"Mobile Number is not registered\")\r\n            }).catch(err => {\r\n                alert(JSON.stringify(err))\r\n            })\r\n        }\r\n    }\r\n\r\n    let confirmOtp = () => {\r\n        if(otp !== \"\") {\r\n            Axios.post(Apis.confirm_survey_otp, {\r\n                mobileNumber: \"+91\"+mobileNumber,\r\n                otp: otp\r\n            }).then(res => {\r\n                if(res.status == '200') {\r\n                    localStorage.setItem('survey_officer_token', res.data.officer.token)\r\n                    props.setSurveyOfficer(res.data.officer)\r\n                    history.push(\"/survey/dashboard\")\r\n                } else alert(res.data)\r\n            }).catch(err => {\r\n                alert(\"something went wrong\")\r\n            })\r\n        }\r\n    }\r\n\r\n    let validateMobileNumber = () => {\r\n        return true;\r\n    }\r\n\r\n    let handleMobileNumber = event => {\r\n        setMobileNumber(event.target.value)\r\n    }\r\n\r\n    let handleOtp = event => {\r\n        setOtp(event.target.value)\r\n    }\r\n    \r\n    return (\r\n        <div style={{height: '100vh', width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n            {preOtp &&\r\n                <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                    <div style={{padding: 10, textAlign: 'center'}}>\r\n                        <Typography variant='h4'>Login</Typography>\r\n                    </div>\r\n                    <TextField label=\"Mobile Number\" type=\"number\" variant=\"outlined\" value={mobileNumber} \r\n                    onChange={handleMobileNumber} />\r\n                    <Button variant=\"contained\" style={{background: lightOrange, \r\n                        color: 'white', marginTop: 10}} onClick={() => login()}>Login</Button>\r\n                </div>\r\n            }\r\n\r\n            {!preOtp &&\r\n                <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                    <div style={{padding: 10, textAlign: 'center'}}>\r\n                        <Typography variant='h4'>Login</Typography>\r\n                    </div>\r\n                    <TextField label=\"Enter OTP\" type=\"number\" variant=\"outlined\" value={otp} \r\n                    onChange={handleOtp} />\r\n                    <Button variant=\"contained\" style={{background: lightOrange, \r\n                        color: 'white', marginTop: 10}} onClick={() => confirmOtp()}>Confirm OTP</Button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        officer: state.survey_officer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setSurveyOfficer: officer => dispatch(setSurveyOfficer(officer))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Typography, Button, AppBar, Toolbar, IconButton } from '@material-ui/core'\r\nimport { ExitToApp, Menu } from '@material-ui/icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { lightBlue } from '../../colors'\r\n\r\n\r\nlet Dashboard = props => {\r\n\r\n    let history = useHistory()\r\n\r\n    let logout = () => {\r\n        localStorage.setItem('survey_officer_token', null)\r\n        history.push(\"/survey/login\")\r\n    }\r\n\r\n    let startNewSurvey = () => history.push(\"/survey/general_information\")\r\n\r\n    return (\r\n        <div style={{height: '100vh'}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar style={{backgroundColor: 'green'}}>\r\n                    <IconButton edge=\"start\" aria-label=\"menu\">\r\n                        <Menu style={{color: \"white\"}} />\r\n                    </IconButton>\r\n\r\n                    <div style={{flexGrow: 1, marginLeft: 15}}>\r\n                        \r\n                    </div>\r\n\r\n\r\n                    <IconButton edge=\"end\" aria-label=\"logout\" onClick={() => logout()}>\r\n                        <ExitToApp style={{color: \"white\"}} />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <div>\r\n                <div style={{marginTop: 50, display: 'flex', flexDirection: 'column', \r\n                alignItems: 'center'}}>\r\n                    <Button variant=\"contained\" style={{backgroundColor: lightBlue, color: '#fafafa'}}\r\n                     onClick={() => startNewSurvey()} >\r\n                        Start New Survey\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        officer: state.survey_officer\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","import React, {useState, useEffect, useReducer} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, AppBar, Toolbar, Typography, TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\nimport { ArrowForward } from '@material-ui/icons'\r\nimport { setFamily } from '../../actions/family'\r\nimport Axios from 'axios'\r\nimport Apis from '../../Apis'\r\nimport { lightBlue, lightOrange, lightGrey, errorRed } from '../../colors'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nlet GeneralInformation = props => {\r\n\r\n    let history = useHistory()\r\n\r\n    let familyReducer = (state, action) => {\r\n        if(action.type == 'setFamilyId') {\r\n            state = {...state, familyId: Date.now().toString()}\r\n        } else if (action.type == 'setAddress') {\r\n            state = { ...state, address: action.payload}\r\n        } else if (action.type == 'setContainmentArea') {\r\n            state = { ...state, containmentArea: action.payload._id, block: action.payload.block }\r\n        } else if (action.type == 'setZoneType') {\r\n            state = { ...state, zoneType: action.payload}\r\n        } else if (action.type == 'setDateOfSurvey') {\r\n            state = { ...state, dateOfSurvey: action.payload }\r\n        } else if (action.type == 'setSurveyOfficer') {\r\n            state = {...state, surveyOfficer: action.payload}\r\n        } else if (action.type == 'setNumberOfMembers') {\r\n            state = { ...state, numberOfMembers: action.payload }\r\n        }\r\n        return state\r\n    }\r\n\r\n    let familyInit = { familyId: null, headName: '', headMobileNumber: '', headGovtIdType:  '', \r\n     headGovtIdNumber: '', address: '', block: null, containmentArea: null, zoneType: '',\r\n     dateOfSurvey: new Date(), numberOfMembers: null, riskLevel: '', surveyOfficer: null }\r\n\r\n    const [family, familyDispatch] = useReducer(familyReducer, familyInit)\r\n\r\n    const [containmentAreas, setContainmentAreas] = useState([])\r\n    const [containmentArea, setContainmentArea] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        familyDispatch({type: 'setSurveyOfficer', payload: props.officer._id})\r\n        familyDispatch({type: 'setFamilyId', payload: Date.now().toString()})\r\n        loadContainmentAreas()\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    let loadContainmentAreas = () => {\r\n        Axios.get(Apis.containment_areas).then(res => {\r\n            if(res.status == '200') setContainmentAreas(res.data.containment_areas)\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    let sortByName = inputArray => {\r\n        return inputArray.sort((aone, atwo) => {\r\n            if(aone.name > atwo.name) return 1\r\n            else if (aone.name < atwo.name) return -1\r\n            else return 0\r\n        })\r\n    }\r\n\r\n    let saveFamily = () => {\r\n        if(validateInputs()){ \r\n            props.setFamily(family)\r\n            history.push(\"/survey/family_members\")\r\n        }\r\n    }\r\n\r\n    let validateInputs = () => {\r\n        \r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'fixed', top: 0, width: '100%', zIndex: 10}} >\r\n                <AppBar position=\"static\" >\r\n                    <Toolbar style={{backgroundColor: 'green'}} >\r\n                        <Typography variant=\"h6\" style={{color: '#fafafa'}} >\r\n                            General Information\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n            <div style={{marginTop: 70, display: 'flex', flexDirection: 'column', padding: 10}}>\r\n                <FormControl variant=\"outlined\" >\r\n                    <InputLabel id=\"areaId\" >Containment Area</InputLabel>\r\n                    <Select label=\"Containment Area\" labelId=\"areaId\" value={containmentArea}\r\n                     onChange={event => {familyDispatch({type: 'setContainmentArea', \r\n                     payload: event.target.value}); setContainmentArea(event.target.value) }} >\r\n                         {sortByName(containmentAreas).map(area => (\r\n                             <MenuItem value={area} >{area.name}</MenuItem>\r\n                         ))}\r\n                     </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={{marginTop: 10}} >\r\n                    <InputLabel id=\"zoneId\" >Zone Type</InputLabel>\r\n                    <Select label=\"Zone Type\" labelId=\"zoneId\" value={family.zoneType}\r\n                     onChange={event => familyDispatch({type: 'setZoneType', \r\n                     payload: event.target.value})} >\r\n                         \r\n                        <MenuItem value=\"buffer\" >Buffer Zone</MenuItem>\r\n                        <MenuItem value=\"containment\" >Containment Zone</MenuItem>\r\n                         \r\n                     </Select>\r\n                </FormControl>\r\n                \r\n                <TextField variant=\"outlined\" label=\"House Address\" style={{marginTop: 10}} value={family.address} onChange={event => familyDispatch({type: 'setAddress', payload: event.target.value})} />\r\n\r\n                <div style={{marginTop: 10, display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                    <Typography variant=\"subtitle2\" style={{marginLeft: 10,marginRight: 10}} >Survey Date</Typography>\r\n                    <TextField variant=\"outlined\" type=\"date\"\r\n                    value={family.dateOfSurvey} onChange={event => familyDispatch({\r\n                        type: 'setDateOfSurvey', payload: event.target.value\r\n                    })} />\r\n                </div>\r\n                <TextField variant=\"outlined\" label=\"Number Of Family Members\" type=\"number\"\r\n                style={{marginTop: 10}} value={family.numberOfMembers} onChange={event => familyDispatch(\r\n                    {type: 'setNumberOfMembers', payload: event.target.value}\r\n                )} />\r\n\r\n                <div style={{marginTop: 50, marginBottom: 50, display: 'flex', flexDirection: 'row',\r\n                   justifyContent: 'center', alignItems: 'center' }} >\r\n                       <Button variant=\"contained\" style={{backgroundColor: errorRed, color: '#fafafa'}} >Cancel</Button>\r\n                \r\n                       <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                        color: '#fafafa', marginLeft: 10}} \r\n                        endIcon={<ArrowForward />} onClick={() => saveFamily()} >\r\n                           Save and Go\r\n                       </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        officer: state.survey_officer,\r\n        family: state.family,\r\n        members: state.members\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        setFamily: family => dispatch(setFamily(family))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(GeneralInformation)","import React, { useState, useReducer } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppBar, Toolbar, Typography, List, ListItem, Button, Dialog, TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\nimport { Add, ArrowForward } from '@material-ui/icons'\r\nimport { setMembers, addMember } from '../../actions/members'\r\nimport { lightBlue, lightOrange, lightGrey } from '../../colors'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nlet FamilyMembers = props => {\r\n\r\n    const [openAddMember, setOpenAddMember] = useState(false)\r\n    let history = useHistory()\r\n\r\n    let memberInit = { name: '', age: '', sex: '', mobileNumber: '', govtIdType: '',\r\n     govtIdNumber: '', address: props.family.address, block: props.family.block, \r\n     containmentArea: props.family.containmentArea, zoneType: props.family.zoneType,\r\n     surveyDate: props.family.dateOfSurvey, surveyOfficer: props.family.surveyOfficer,\r\n     symptoms: [], deseases: [], pregnancy: false, traveledFrom: null, travelDate: null,\r\n     sourceContacted: null, contactNature: null, contactRelation: null, riskLevel: 'none',\r\n     selectedForSample: false, quarantined: false, quarantineDate: null, homeQuarantined: false, \r\n     quarantineCenter: null, releaseDate: null}\r\n\r\n    let memberReducer = (state, action) => {\r\n        if(action.type == 'setName') state = {...state, name: action.payload}\r\n        else if (action.type == 'setAge') state = {...state, age: action.payload}\r\n        else if (action.type == 'setSex') state = {...state, sex: action.payload}\r\n        else if (action.type == 'setMobileNumber') state = {...state, mobileNumber: action.payload}\r\n        else if (action.type == 'setGovtIdType') state = {...state, govtIdType: action.payload}\r\n        else if (action.type == 'setGovtIdNumber') state = {...state, govtIdNumber: action.payload}\r\n        else if (action.type == 'reset') state = memberInit\r\n        return state;\r\n    }\r\n\r\n    const [member, mDispatch] = useReducer(memberReducer, memberInit)\r\n\r\n    let addMember = () => {\r\n        props.addMember(member)\r\n        mDispatch({type: 'reset'})\r\n        setOpenAddMember(false)\r\n    }\r\n\r\n    let goToFamilyHead = () => {\r\n        history.push(\"/survey/family_head\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'fixed', top: 0, width: '100%'}}>\r\n                <AppBar position=\"static\" >\r\n                    <Toolbar style={{backgroundColor: 'green'}} >\r\n                        <Typography variant=\"h6\" style={{color: '#fafafa'}}>\r\n                            Family Members\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n            <div style={{marginTop: 70}} >\r\n                <div style={{padding: 10, display: 'flex', justifyContent: 'center', alignItems: 'center'}} >\r\n                    {(props.members.length == 0) &&\r\n                        <Typography variant=\"h6\" style={{color: lightOrange}} >\r\n                            Add Members\r\n                        </Typography>\r\n                    }\r\n\r\n                    {(props.members.length !== 0 && props.members.length < props.family.numberOfMembers) &&\r\n                        <Typography variant=\"h6\" style={{color: lightOrange}} >\r\n                            Add {props.family.numberOfMembers - props.members.length} More Members\r\n                        </Typography>\r\n                    }\r\n                </div>\r\n                {(props.members.length > 0) &&\r\n                    <List>\r\n                        {props.members.map((member, index) => (\r\n                            <div style={{padding: 5, margin: 5, display: 'flex', flexDirection: 'row', \r\n                            alignItems: 'center', justifyContent: 'space-around', borderWidth: 1,\r\n                            borderColor: lightGrey, borderRadius: 5, borderStyle: 'solid' }} >\r\n                                <Typography variant=\"subtitle2\" >{index+1}</Typography>\r\n                                <Typography variant=\"subtitle2\" >{member.name}</Typography>\r\n                                <Typography variant=\"subtitle2\" >{member.age}</Typography>\r\n                            </div>\r\n                        ))}\r\n                    </List>\r\n                }\r\n                <div style={{padding: 20, display: 'flex', justifyContent: 'center', alignItems: 'center'}} >\r\n                    {(props.members.length == props.family.numberOfMembers)\r\n                        ? <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa', marginLeft: 10}} \r\n                            endIcon={<ArrowForward />} onClick={() => goToFamilyHead()} >\r\n                               Save and Go\r\n                           </Button>\r\n                        : <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa', marginLeft: 10}} \r\n                            startIcon={<Add />} onClick={() => setOpenAddMember(true)} >\r\n                               Add Member\r\n                           </Button>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog open={openAddMember} onClose={() => setOpenAddMember(false)} >\r\n                <div style={{padding: 10, display: 'flex', flexDirection: 'column'}} >\r\n                    <TextField variant=\"outlined\" label=\"Name\" value={member.name} onChange={event => mDispatch({type: 'setName', payload: event.target.value})} />\r\n                    <TextField variant=\"outlined\" label=\"Age\" value={member.age} onChange={event => mDispatch({type: 'setAge', payload: event.target.value})} style={{marginTop: 10}} />\r\n                    <FormControl variant=\"outlined\" style={{marginTop: 10}} >\r\n                        <InputLabel id=\"sexId\" >Sex</InputLabel>\r\n                        <Select label=\"Sex\" labelId=\"sexId\" value={member.sex} onChange={event => mDispatch({type: 'setSex', payload: event.target.value})} >\r\n                            <MenuItem value=\"male\" >Male</MenuItem>\r\n                            <MenuItem value=\"female\">Female</MenuItem>\r\n                            <MenuItem value=\"other\" >Other</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField type='number' variant=\"outlined\" label=\"Mobile Number\" value={member.mobileNumber} onChange={event => mDispatch({type: 'setMobileNumber', payload: event.target.value})} style={{marginTop: 10}} />\r\n                    <FormControl variant=\"outlined\" style={{marginTop: 10}} >\r\n                        <InputLabel id=\"govtIdTypeId\" >Government ID Type</InputLabel>\r\n                        <Select label=\"Government ID Type\" labelId=\"govtIdTypeId\" value={member.govtIdType} onChange={event => mDispatch({type: 'setGovtIdType', payload: event.target.value})} >\r\n                            <MenuItem value=\"adhar\" >Adhar Card</MenuItem>\r\n                            <MenuItem value=\"voter\">Voter Card</MenuItem>\r\n                            <MenuItem value=\"pan\" >Pan Card</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField variant=\"outlined\" style={{marginTop: 10}} label=\"Government ID Number\" value={member.govtIdNumber} onChange={event => mDispatch({type: 'setGovtIdNumber', payload: event.target.value})} />\r\n                    <div style={{padding: 10}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa'}} onClick={() => addMember()} >\r\n                            Save\r\n                        </Button>\r\n                        <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}} onClick={() => setOpenAddMember(false)} >\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        family: state.family,\r\n        members: state.members\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        setMembers: members => dispatch(setMembers(members)),\r\n        addMember: member => dispatch(addMember({...member}))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(FamilyMembers)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppBar, Toolbar, Typography, Button, Radio, FormControl, RadioGroup, FormControlLabel } from '@material-ui/core'\r\nimport { ArrowForward } from '@material-ui/icons'\r\nimport { lightBlue } from '../../colors'\r\nimport { setHead as setFamilyHead  } from '../../actions/family'\r\nimport { setHead as setMembersHead } from '../../actions/members'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nlet FamilyHead = props => {\r\n\r\n    const [head, setHead] = useState(null)\r\n    const [headIndex, setHeadIndex] = useState(null)\r\n\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if(headIndex !==  null) {\r\n            setHead(props.members[parseInt(headIndex)])\r\n        }\r\n        \r\n    }, [headIndex])\r\n\r\n    let setHeadAndGo = () => {\r\n        props.setFamilyHead(head)\r\n        props.setMembersHead(head)\r\n        history.push(\"/survey/symptoms\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'fixed', top: 0, width: '100%'}}>\r\n                <AppBar position=\"static\" >\r\n                    <Toolbar style={{backgroundColor: 'green'}} >\r\n                        <Typography variant=\"h6\" style={{color: '#fafafa'}}>\r\n                            Family Head\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n            <div style={{marginTop: 70}}>\r\n                <div style={{padding: 10, display: 'flex', flexDirection: 'column'}}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <RadioGroup value={headIndex} onChange={event => setHeadIndex(event.target.value)} >\r\n                            {props.members.map((member, index) => (\r\n                                <FormControlLabel value={index.toString()} control={<Radio />} label={member.name+\" (\"+member.age+\")\"} />\r\n                            ))}\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <div style={{padding: 20, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa', marginLeft: 10}} \r\n                            endIcon={<ArrowForward />} onClick={() => setHeadAndGo()} >\r\n                               Save and Go\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        family: state.family,\r\n        members: state.members\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        setFamilyHead: head => dispatch(setFamilyHead(head)),\r\n        setMembersHead: head => dispatch(setMembersHead(head))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(FamilyHead)","import React, { useState } from 'react'\r\nimport { connect } from  'react-redux'\r\nimport { AppBar, Toolbar, Typography, Button, Checkbox, FormControl, Dialog, FormControlLabel } from '@material-ui/core'\r\nimport { ArrowForward } from '@material-ui/icons'\r\nimport { lightBlue, lightOrange, lightGrey } from '../../colors'\r\nimport { updateMemberByIndex } from '../../actions/members'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nlet Symptoms = props => {\r\n\r\n    let history = useHistory()\r\n\r\n    const [openSymptoms, setOpenSymptoms] = useState(false)\r\n    const [symptoms, setSymptoms] = useState([])\r\n    const [memberIndex, setMemberIndex] = useState(null)\r\n    const [member, setmember] = useState(null)\r\n\r\n    let startAddingSymptoms = ({index, member}) => {\r\n        setMemberIndex(index)\r\n        setmember(member)\r\n        setSymptoms(member.symptoms)\r\n        setOpenSymptoms(true)\r\n    }\r\n\r\n    let cancelSymptoms = () => {\r\n        setMemberIndex(null)\r\n        setmember(null)\r\n        setSymptoms([])\r\n        setOpenSymptoms(false)\r\n    }\r\n\r\n    let toggleSymptom = symptom => {\r\n        if(symptoms.includes(symptom)) {\r\n            let ss = [...symptoms]\r\n            ss.forEach((item, index) => {\r\n                if(item == symptom) ss.splice(index, 1)\r\n            })\r\n            setSymptoms(ss)\r\n        } else setSymptoms([...symptoms, symptom])\r\n    }\r\n\r\n    let addSymptoms = () => {\r\n        props.updateMemberByIndex({index: memberIndex, member: {...member, symptoms: symptoms}})\r\n        setMemberIndex(null)\r\n        setmember(null)\r\n        setSymptoms([])\r\n        setOpenSymptoms(false)\r\n    }\r\n\r\n    let saveAndGo = () => {\r\n        history.push(\"/survey/deseases\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'fixed', top: 0, width: '100%'}}>\r\n                <AppBar position=\"static\" >\r\n                    <Toolbar style={{backgroundColor: 'green'}} >\r\n                        <Typography variant=\"h6\" style={{color: '#fafafa'}}>\r\n                            Symptoms\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n            <div style={{marginTop: 70}}>\r\n                <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', \r\n                alignItems: 'center', padding: 20}}>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, textAlign: 'center'}} >\r\n                        Does anyone has symptoms of cold\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, marginTop: 10, textAlign: 'center'}} >\r\n                        क्या किसी को सर्दी के लक्षण हैं\r\n                    </Typography>\r\n                </div>\r\n                <div>\r\n                    {props.members.map((member, index) => (\r\n                        <div style={{margin: 5, borderStyle: 'solid', borderWidth: 1,\r\n                         borderColor: lightGrey, borderRadius: 5, padding: 5, display: 'flex',\r\n                         flexDirection: 'row', alignItems: 'center', flexWrap: 'wrap'}} \r\n                         onClick={() => startAddingSymptoms({index, member})} >\r\n                             <Checkbox checked={member.symptoms.length > 0}></Checkbox>\r\n                             <Typography variant=\"subtitle2\">{member.name + \" (\"+member.age+\")\"}</Typography>\r\n                         </div>\r\n                    ))}\r\n                </div>\r\n                <div style={{padding: 20, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa', marginLeft: 10}} \r\n                            endIcon={<ArrowForward />} onClick={() => saveAndGo()} >\r\n                               Save and Go\r\n                        </Button>\r\n                </div> \r\n            </div>\r\n\r\n            <Dialog open={openSymptoms} onClose={() => cancelSymptoms()} >\r\n                <div style={{padding: 10, display: 'flex', flexDirection: 'column'}}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormControlLabel control={<Checkbox checked={symptoms.includes(\"cold\")} value=\"cold\" onChange={() => toggleSymptom('cold')} />} label=\"Cold जुकाम\" />\r\n                        <FormControlLabel control={<Checkbox checked={symptoms.includes(\"cough\")} value=\"cough\" onChange={() => toggleSymptom('cough')} />} label=\"Cough खांसी\" />\r\n                        <FormControlLabel control={<Checkbox checked={symptoms.includes(\"fever\")} value=\"fever\" onChange={() => toggleSymptom('fever')} />} label=\"Fever बुखार\" />\r\n                        <FormControlLabel control={<Checkbox checked={symptoms.includes(\"short_breating\")} value=\"short_breathing\" onChange={() => toggleSymptom('short_breathing')} />} label=\"Short Breating सांस लेने में तकलीफ\" />\r\n                    </FormControl>\r\n                    <div style={{padding: 10, display: 'flex', flexDirection: 'row'}} >\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue,\r\n                             color: '#fafafa'}} onClick={() => addSymptoms()} >\r\n                            Save\r\n                        </Button>\r\n                        <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}} onClick={() => cancelSymptoms()} >\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        members: state.members\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        updateMemberByIndex: ({index, member}) => dispatch(updateMemberByIndex({index, member}))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Symptoms)","import React, { useState } from 'react'\r\nimport { FormControl, InputLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core'\r\n\r\nlet TestComponent = props => {\r\n\r\n    const [val, setval] = useState(null)\r\n\r\n    const [valList, setValList] = useState([\r\n        {name: 'mayank', game: 'cricket'},\r\n        {name: 'steave', game: 'touring'}\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            <FormControl component=\"fieldset\" >\r\n                <RadioGroup value={val} onChange={event => setval(event.target.value)} >\r\n                    {valList.map((person, index) => (\r\n                        <FormControlLabel value={index.toString()} label={person.name} control={<Radio />} />\r\n                    ))}\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestComponent;","import React, { useState } from 'react'\r\nimport { connect } from  'react-redux'\r\nimport { AppBar, Toolbar, Typography, Button, Checkbox, FormControl, Dialog, FormControlLabel } from '@material-ui/core'\r\nimport { ArrowForward } from '@material-ui/icons'\r\nimport { lightBlue, lightOrange, lightGrey } from '../../colors'\r\nimport { updateMemberByIndex } from '../../actions/members'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nlet Deseases = props => {\r\n\r\n    let history = useHistory()\r\n\r\n    const [openDeseases, setOpenDeseases] = useState(false)\r\n    const [deseases, setDeseases] = useState([])\r\n    const [memberIndex, setMemberIndex] = useState(null)\r\n    const [member, setmember] = useState(null)\r\n\r\n    let startAddingDeseases = ({index, member}) => {\r\n        setMemberIndex(index)\r\n        setmember(member)\r\n        setDeseases(member.deseases)\r\n        setOpenDeseases(true)\r\n    }\r\n\r\n    let cancelDeseases = () => {\r\n        setMemberIndex(null)\r\n        setmember(null)\r\n        setDeseases([])\r\n        setOpenDeseases(false)\r\n    }\r\n\r\n    let toggleDesease = desease => {\r\n        if(deseases.includes(desease)) {\r\n            let ss = [...deseases]\r\n            ss.forEach((item, index) => {\r\n                if(item == desease) ss.splice(index, 1)\r\n            })\r\n            setDeseases(ss)\r\n        } else setDeseases([...deseases, desease])\r\n    }\r\n\r\n    let addDeseases = () => {\r\n        props.updateMemberByIndex({index: memberIndex, member: {...member, deseases: deseases}})\r\n        setMemberIndex(null)\r\n        setmember(null)\r\n        setDeseases([])\r\n        setOpenDeseases(false)\r\n    }\r\n\r\n    let saveAndGo = () => {\r\n        history.push(\"/survey/pregnancy\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'fixed', top: 0, width: '100%'}}>\r\n                <AppBar position=\"static\" >\r\n                    <Toolbar style={{backgroundColor: 'green'}} >\r\n                        <Typography variant=\"h6\" style={{color: '#fafafa'}}>\r\n                            Deseases\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n            <div style={{marginTop: 70}}>\r\n                <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', \r\n                alignItems: 'center', padding: 20}}>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, textAlign: 'center'}} >\r\n                        Does anyone has severe deseases\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, marginTop: 10, textAlign: 'center'}} >\r\n                        क्या किसी को गंभीर बीमारियाँ हैं\r\n                    </Typography>\r\n                </div>\r\n                <div>\r\n                    {props.members.map((member, index) => (\r\n                        <div style={{margin: 5, borderStyle: 'solid', borderWidth: 1,\r\n                         borderColor: lightGrey, borderRadius: 5, padding: 5, display: 'flex',\r\n                         flexDirection: 'row', alignItems: 'center', flexWrap: 'wrap'}} \r\n                         onClick={() => startAddingDeseases({index, member})} >\r\n                             <Checkbox checked={member.deseases.length > 0}></Checkbox>\r\n                             <Typography variant=\"subtitle2\">{member.name + \" (\"+member.age+\")\"}</Typography>\r\n                         </div>\r\n                    ))}\r\n                </div>\r\n                <div style={{padding: 20, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa', marginLeft: 10}} \r\n                            endIcon={<ArrowForward />} onClick={() => saveAndGo()} >\r\n                               Save and Go\r\n                        </Button>\r\n                </div> \r\n            </div>\r\n\r\n            <Dialog open={openDeseases} onClose={() => cancelDeseases()} >\r\n                <div style={{padding: 10, display: 'flex', flexDirection: 'column'}}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormControlLabel control={<Checkbox checked={deseases.includes(\"sugar\")} value=\"sugar\" onChange={() => toggleDesease('sugar')} />} label=\"Sugar शुगर\" />\r\n                        <FormControlLabel control={<Checkbox checked={deseases.includes(\"blood_pressure\")} value=\"blood_pressure\" onChange={() => toggleDesease('blood_pressure')} />} label=\"Blood Pressure रक्तचाप\" />\r\n                        <FormControlLabel control={<Checkbox checked={deseases.includes(\"diabetes\")} value=\"diabetes\" onChange={() => toggleDesease('diabetes')} />} label=\"Diabetes मधुमेह\" />\r\n                        <FormControlLabel control={<Checkbox checked={deseases.includes(\"cancer\")} value=\"cancer\" onChange={() => toggleDesease('cancer')} />} label=\"Cancer कैंसर\" />\r\n                    </FormControl>\r\n                    <div style={{padding: 10, display: 'flex', flexDirection: 'row'}} >\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue,\r\n                             color: '#fafafa'}} onClick={() => addDeseases()} >\r\n                            Save\r\n                        </Button>\r\n                        <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}} onClick={() => cancelDeseases()} >\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        members: state.members\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        updateMemberByIndex: ({index, member}) => dispatch(updateMemberByIndex({index, member}))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Deseases)","import React, { useState } from 'react'\r\nimport { connect } from  'react-redux'\r\nimport { AppBar, Toolbar, Typography, Button, Checkbox, FormControl, Dialog, FormControlLabel } from '@material-ui/core'\r\nimport { ArrowForward } from '@material-ui/icons'\r\nimport { lightBlue, lightOrange, lightGrey } from '../../colors'\r\nimport { updateMemberByIndex } from '../../actions/members'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nlet Pregnancy = props => {\r\n\r\n    let history = useHistory()\r\n\r\n    let togglePregnancy = ({index, member}) => {\r\n        props.updateMemberByIndex({index: index, member: {...member, pregnancy: !member.pregnancy}})\r\n    }\r\n\r\n    let saveAndGo = () => {\r\n        history.push(\"/survey/travel_details\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'fixed', top: 0, width: '100%'}}>\r\n                <AppBar position=\"static\" >\r\n                    <Toolbar style={{backgroundColor: 'green'}} >\r\n                        <Typography variant=\"h6\" style={{color: '#fafafa'}}>\r\n                            Pregnancy Status\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n            <div style={{marginTop: 70}}>\r\n                <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', \r\n                alignItems: 'center', padding: 20}}>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, textAlign: 'center'}} >\r\n                        Is anyone pregnant\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, marginTop: 10, textAlign: 'center'}} >\r\n                        क्या कोई गर्भवती है\r\n                    </Typography>\r\n                </div>\r\n                <div>\r\n                    {props.members.map((member, index) => (\r\n                        <div style={{margin: 5, borderStyle: 'solid', borderWidth: 1,\r\n                         borderColor: lightGrey, borderRadius: 5, padding: 5, display: 'flex',\r\n                         flexDirection: 'row', alignItems: 'center', flexWrap: 'wrap'}} \r\n                         onClick={() => togglePregnancy({index, member})} >\r\n                             <Checkbox checked={member.pregnancy}></Checkbox>\r\n                             <Typography variant=\"subtitle2\">{member.name + \" (\"+member.age+\")\"}</Typography>\r\n                         </div>\r\n                    ))}\r\n                </div>\r\n                <div style={{padding: 20, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa', marginLeft: 10}} \r\n                            endIcon={<ArrowForward />} onClick={() => saveAndGo()} >\r\n                               Save and Go\r\n                        </Button>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        members: state.members\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        updateMemberByIndex: ({index, member}) => dispatch(updateMemberByIndex({index, member}))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Pregnancy)","import React, {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppBar, Toolbar, Typography, Dialog, TextField, Button, Checkbox } from '@material-ui/core'\r\nimport { ArrowForward } from '@material-ui/icons'\r\nimport { updateMemberByIndex } from '../../actions/members'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { lightBlue, lightGrey, lightOrange } from '../../colors'\r\n\r\n\r\n\r\nlet TravelDetails = props => {\r\n\r\n    let history = useHistory()\r\n\r\n    const [openTravel, setOpenTravel] = useState(false)\r\n\r\n    const [memberIndex, setMemberIndex] = useState(null)\r\n    const [member, setMember] = useState(null)\r\n\r\n    const [traveledFrom, setTraveledFrom] = useState(null)\r\n    const [travelDate, setTravelDate] = useState(null)\r\n\r\n    let cancelTravel = () => {\r\n        setMember(null)\r\n        setMemberIndex(null)\r\n        setTravelDate(null)\r\n        setTraveledFrom(null)\r\n        setOpenTravel(false)\r\n    }\r\n\r\n    let startTravelDetails = ({index, member}) => {\r\n        setTraveledFrom(member.traveledFrom)\r\n        setTravelDate(member.travelDate)\r\n        setMemberIndex(index)\r\n        setMember(member)\r\n        setOpenTravel(true)\r\n    }\r\n\r\n    let setTravelDetails = () => {\r\n        props.updateMemberByIndex({index: memberIndex, member: {...member, \r\n            traveledFrom: traveledFrom, travelDate: travelDate}})\r\n        cancelTravel()\r\n    }\r\n\r\n    let validInputDate = () => {\r\n        let minDate = new Date()\r\n        minDate.setDate(minDate.getDate() - 28)\r\n        if((new Date(travelDate)) >= minDate) return 'white'\r\n        else return 'pink'\r\n    }\r\n\r\n    let saveAndGo = () => {\r\n        history.push(\"/survey/contact_exposure\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'fixed', top: 0, width: '100%'}}>\r\n                <AppBar position=\"static\" >\r\n                    <Toolbar style={{backgroundColor: 'green'}} >\r\n                        <Typography variant=\"h6\" style={{color: '#fafafa'}}>\r\n                            Travel Details\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n            <div style={{marginTop: 70}}>\r\n            <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', \r\n                alignItems: 'center', padding: 20}}>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, textAlign: 'center'}} >\r\n                        Has anyone traveled within 28 days\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, marginTop: 10, textAlign: 'center'}} >\r\n                        28 दिनों के भीतर किसी ने भी यात्रा की है\r\n                    </Typography>\r\n                </div>\r\n                <div>\r\n                    {props.members.map((member, index) => (\r\n                        <div style={{margin: 5, borderStyle: 'solid', borderWidth: 1,\r\n                         borderColor: lightGrey, borderRadius: 5, padding: 5, display: 'flex',\r\n                         flexDirection: 'row', alignItems: 'center', flexWrap: 'wrap'}} \r\n                         onClick={() => startTravelDetails({index, member})} >\r\n                             <Checkbox checked={member.traveledFrom !== null}></Checkbox>\r\n                             <Typography variant=\"subtitle2\">{member.name + \" (\"+member.age+\")\"}</Typography>\r\n                         </div>\r\n                    ))}\r\n                </div>\r\n                <div style={{padding: 20, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa', marginLeft: 10}} \r\n                            endIcon={<ArrowForward />} onClick={() => saveAndGo()} >\r\n                               Save and Go\r\n                        </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog open={openTravel} onClose={() => cancelTravel()}>\r\n                <div style={{padding: 10, display: 'flex', flexDirection: 'column'}} >\r\n                    <TextField variant=\"outlined\" label=\"Traveled From\" value={traveledFrom} onChange={event => setTraveledFrom(event.target.value)} />\r\n                    \r\n                    <div style={{marginTop: 10, display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                        <Typography variant=\"subtitle2\" style={{marginLeft: 10,marginRight: 10}} >Travel Date</Typography>\r\n                        <TextField variant=\"outlined\" type=\"date\" style={{backgroundColor: validInputDate()}}\r\n                        value={travelDate} onChange={event => setTravelDate(event.target.value)} />\r\n                    </div>\r\n                    \r\n                    <div style={{padding: 10}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa'}} onClick={() => setTravelDetails()} >\r\n                            Save\r\n                        </Button>\r\n                        <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}} onClick={() => cancelTravel()} >\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        members: state.members\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        updateMemberByIndex: ({index, member}) => dispatch(updateMemberByIndex({index, member}))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(TravelDetails)","import React, {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppBar, Toolbar, Typography, Button, Checkbox, Divider, Dialog, FormControl, FormControlLabel, Radio, RadioGroup, Select, MenuItem, InputLabel } from '@material-ui/core'\r\nimport { ArrowForward } from '@material-ui/icons'\r\nimport Axios from 'axios'\r\nimport Apis from '../../Apis'\r\nimport { lightBlue, lightOrange, veryLightGrey, lightGrey } from '../../colors'\r\nimport { updateMemberByIndex } from '../../actions/members'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nlet ContactExposure = props => {\r\n\r\n    let history = useHistory()\r\n\r\n    const [containmentSources, setContainmentSources] = useState([])\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const [openContactedSource, setOpenContactedSource] = useState(false)\r\n    const [member, setmember] = useState(null)\r\n    const [memberIndex, setMemberIndex] = useState(null)\r\n    const [selectedSource, setSelectedSource] = useState(null)\r\n\r\n    useEffect(() => {\r\n        loadContainmentSources()\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    let startContactedSource = ({index, member}) => {\r\n        setMemberIndex(index)\r\n        setmember(member)\r\n        setOpenContactedSource(true)\r\n    }\r\n\r\n    let cancelContactedSource = () => {\r\n        setmember(null)\r\n        setMemberIndex(null)\r\n        setSelectedSource(null)\r\n        setOpenContactedSource(false)\r\n    }\r\n\r\n    let setSource = () => {\r\n        if(selectedSource != 'none') {\r\n            props.updateMemberByIndex({index: memberIndex, member: {...member, sourceContacted: selectedSource}})\r\n        } else props.updateMemberByIndex({index: memberIndex, member: {...member, sourceContacted: null}})\r\n        cancelContactedSource()\r\n    }\r\n\r\n    let loadContainmentSources = () => {\r\n        setloading(true)\r\n        Axios.post(Apis.containment_area_sources, {\r\n            areaId: props.family.containmentArea\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                setContainmentSources(res.data.sources)\r\n            }\r\n        }).catch(err => console.log(err))\r\n        .finally(() => setloading(false))\r\n    }\r\n\r\n    let sortByName = inputArray => {\r\n        return inputArray.sort((aone, atwo) => {\r\n            if(aone.name > atwo.name) return 1\r\n            else if (aone.name < atwo.name) return -1\r\n            else return 0\r\n        })\r\n    }\r\n\r\n    let setNature = ({index, member, nature}) => {\r\n        props.updateMemberByIndex({index, member: {...member, contactNature: nature}})\r\n    }\r\n\r\n    let setRelation = ({index, member, relation}) => {\r\n        props.updateMemberByIndex({index, member: {...member, contactRelation: relation}})\r\n    }\r\n\r\n    let setRisk = ({index, member, risk}) => {\r\n        props.updateMemberByIndex({index, member: {...member, riskLevel: risk}})\r\n    }\r\n\r\n    let saveAndGo = () => {\r\n        history.push(\"/survey/select_for_sample\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'fixed', top: 0, width: '100%'}}>\r\n                <AppBar position=\"static\" >\r\n                    <Toolbar style={{backgroundColor: 'green'}} >\r\n                        <Typography variant=\"h6\" style={{color: '#fafafa'}}>\r\n                            Contact Exposure\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n            <div style={{marginTop: 70}}>\r\n                <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', \r\n                alignItems: 'center', padding: 20}}>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, textAlign: 'center'}} >\r\n                        Has anyone came in contact with following persons\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, marginTop: 10, textAlign: 'center'}} >\r\n                        क्या कोई निम्नलिखित व्यक्तियों के संपर्क में आया है\r\n                    </Typography>\r\n                </div>\r\n                <div>\r\n                    {loading &&\r\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 10}} >\r\n                            Wait while names are loading...\r\n                        </div>\r\n                    }\r\n                    {sortByName(containmentSources).map(source => (\r\n                        <div style={{padding: 5, display: 'flex', flexDirection: 'row', \r\n                        alignItems: 'center', flexWrap: 'wrap', justifyContent: 'space-around'}} >\r\n                            <Typography variant=\"subtitle2\" >{source.name+\" (\"+source.age+\")\"}</Typography>\r\n                            <Typography variant=\"subtitle2\" >{source.address}</Typography>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <Divider />\r\n                <div style={{marginTop: 20}}>\r\n                    {props.members.map((member, index) => (\r\n                        <div style={{margin: 5,display: 'flex', \r\n                        flexDirection: 'column', borderTopLeftRadius: 5, borderTopRightRadius: 5,\r\n                        borderStyle: 'solid', borderWidth: 1, borderColor: lightGrey}}\r\n                         >\r\n                            <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap', \r\n                            backgroundColor: veryLightGrey, borderTopLeftRadius: 5,\r\n                             borderTopRightRadius: 5, alignItems: 'center'}}\r\n                             onClick={() => startContactedSource({index, member})} >\r\n                                <Checkbox checked={member.sourceContacted !== null} />\r\n                                <Typography variant=\"subtitle2\" style={{marginLeft: 10}} >\r\n                                    {member.name+\" (\"+member.age+\")\"}\r\n                                </Typography>\r\n                            </div>\r\n                            <Divider />\r\n                            {(member.sourceContacted !== null) &&\r\n                                <div style={{backgroundColor: 'white', padding: 5, display: 'flex',\r\n                                flexDirection: 'column'}}>\r\n                                    <FormControl variant=\"outlined\" >\r\n                                        <InputLabel id=\"natureId\" >Contact Nature संपर्क का प्रकार</InputLabel>\r\n                                        <Select label=\"Contact Nature संपर्क का प्रकार\" labelId=\"natureId\" value={member.contactNature} onChange={event => setNature({index, member, nature: event.target.value})} >\r\n                                            <MenuItem value=\"social_meetup\" >Social Meetup सामाजिक मुलाकात</MenuItem>\r\n                                            <MenuItem value=\"travel_together\">Traveled Together एक साथ यात्रा की</MenuItem>\r\n                                            <MenuItem value=\"party\" >Party पार्टी</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl variant=\"outlined\" style={{marginTop: 10}} >\r\n                                        <InputLabel id=\"relationId\" >Relation With Contact Hindi व्यक्ति के साथ संबंध</InputLabel>\r\n                                        <Select label=\"Relation With Contact Hindi व्यक्ति के साथ संबंध\" labelId=\"relationId\" value={member.contactRelation} onChange={event => setRelation({index, member, relation: event.target.value})} >\r\n                                            <MenuItem value=\"relative\" >Relative रिश्तेदार</MenuItem>\r\n                                            <MenuItem value=\"friend\">Friend मित्र</MenuItem>\r\n                                            <MenuItem value=\"general\" >General Relation सामान्य संबंध</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl variant=\"outlined\" style={{marginTop: 10}} >\r\n                                        <InputLabel id=\"riskId\">Risk Level जोखिम का स्तर</InputLabel>\r\n                                        <Select label=\"Risk Level जोखिम का स्तर\" labelId=\"riskId\" value={member.riskLevel} onChange={event => setRisk({index, member, risk: event.target.value})} >\r\n                                            <MenuItem value=\"low\">Low कम</MenuItem>\r\n                                            <MenuItem value=\"high\">High ज्यादा</MenuItem>\r\n                                            <MenuItem value=\"none\">None बिल्कुल नहीं</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div style={{padding: 20, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa', marginLeft: 10}} \r\n                            endIcon={<ArrowForward />} onClick={() => saveAndGo()} >\r\n                               Save and Go\r\n                        </Button>\r\n                </div> \r\n            </div>\r\n\r\n            <Dialog open={openContactedSource} onClose={() => cancelContactedSource()} >\r\n                <div style={{padding: 10}}>\r\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                        <FormControl component=\"fieldset\">\r\n                            <RadioGroup value={selectedSource} onChange={event => setSelectedSource(event.target.value)}>\r\n                                {sortByName(containmentSources).map(source => (\r\n                                    <FormControlLabel control={<Radio />} label={source.name+\" (\"+source.age+\")\"} value={source._id} />\r\n                                ))}\r\n                                <FormControlLabel control={<Radio />} label=\"None\" value='none' />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                        <div style={{padding: 10, display: 'flex', flexDirection: 'row'}} >\r\n                            <Button variant=\"contained\" style={{backgroundColor: lightBlue,\r\n                                color: '#fafafa'}} onClick={() => setSource()} >\r\n                                Save\r\n                            </Button>\r\n                            <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}} onClick={() => cancelContactedSource()} >\r\n                                Cancel\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        family: state.family,\r\n        members: state.members\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        updateMemberByIndex: ({index, member}) => dispatch(updateMemberByIndex({index, member}))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ContactExposure)","import React, { useState } from 'react'\r\nimport { connect } from  'react-redux'\r\nimport { AppBar, Toolbar, Typography, Button, Checkbox, FormControl, Dialog, FormControlLabel } from '@material-ui/core'\r\nimport { ArrowForward } from '@material-ui/icons'\r\nimport { lightBlue, lightOrange, lightGrey } from '../../colors'\r\nimport { updateMemberByIndex } from '../../actions/members'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nlet SelectForSample = props => {\r\n\r\n    let history = useHistory()\r\n\r\n    let toggleSelectForSample = ({index, member}) => {\r\n        props.updateMemberByIndex({index: index, member: {...member, selectedForSample: !member.selectedForSample}})\r\n    }\r\n\r\n    let saveAndGo = () => {\r\n        history.push(\"/survey/quarantine_status\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'fixed', top: 0, width: '100%'}}>\r\n                <AppBar position=\"static\" >\r\n                    <Toolbar style={{backgroundColor: 'green'}} >\r\n                        <Typography variant=\"h6\" style={{color: '#fafafa'}}>\r\n                            Select For Sample\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n            <div style={{marginTop: 70}}>\r\n                <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', \r\n                alignItems: 'center', padding: 20}}>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, textAlign: 'center'}} >\r\n                        Select For Sample\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, marginTop: 10, textAlign: 'center'}} >\r\n                        नमूने के लिए चयन करें\r\n                    </Typography>\r\n                </div>\r\n                <div>\r\n                    {props.members.map((member, index) => (\r\n                        <div style={{margin: 5, borderStyle: 'solid', borderWidth: 1,\r\n                         borderColor: lightGrey, borderRadius: 5, padding: 5, display: 'flex',\r\n                         flexDirection: 'row', alignItems: 'center', flexWrap: 'wrap'}} \r\n                         onClick={() => toggleSelectForSample({index, member})} >\r\n                             <Checkbox checked={member.selectedForSample}></Checkbox>\r\n                             <Typography variant=\"subtitle2\">{member.name + \" (\"+member.age+\")\"}</Typography>\r\n                         </div>\r\n                    ))}\r\n                </div>\r\n                <div style={{padding: 20, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa', marginLeft: 10}} \r\n                            endIcon={<ArrowForward />} onClick={() => saveAndGo()} >\r\n                               Save and Go\r\n                        </Button>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        members: state.members\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        updateMemberByIndex: ({index, member}) => dispatch(updateMemberByIndex({index, member}))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(SelectForSample)","import React, {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppBar, Toolbar, Typography, Button, Checkbox, Divider, TextField, FormControl, FormControlLabel, Dialog, Select, MenuItem, InputLabel, CircularProgress } from '@material-ui/core'\r\nimport { ArrowForward, Save } from '@material-ui/icons'\r\nimport Axios from 'axios'\r\nimport Apis from '../../Apis'\r\nimport { lightBlue, lightOrange, veryLightGrey, lightGrey } from '../../colors'\r\nimport { updateMemberByIndex, setMembers } from '../../actions/members'\r\nimport { setFamily } from '../../actions/family'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nlet ContactExposure = props => {\r\n\r\n    let history = useHistory()\r\n\r\n    const [quarantineCenters, setQuarantineCenters] = useState([])\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const [openSaveToServer, setOpenSaveToServer] = useState(false)\r\n    const [saving, setSaving] = useState(false)\r\n    const [savingMsg, setSavingMsg] = useState('')\r\n\r\n    useEffect(() => {\r\n        loadQuarantineCenters()\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    let toggleQuarantine = ({index, member}) => {\r\n        props.updateMemberByIndex({index, member: {...member, quarantined: !member.quarantined,\r\n        homeQuarantined: false, quarantineCenter: null, quarantineDate: null, releaseDate: null }})\r\n    }\r\n\r\n\r\n    \r\n\r\n    let loadQuarantineCenters = () => {\r\n        setloading(true)\r\n        Axios.get(Apis.quarantine_centers).then(res => {\r\n            if(res.status == '200') {\r\n                setQuarantineCenters(res.data.quarantine_centers)\r\n            }\r\n        }).catch(err => console.log(err))\r\n        .finally(() => setloading(false))\r\n    }\r\n\r\n    let sortByName = inputArray => {\r\n        return inputArray.sort((aone, atwo) => {\r\n            if(aone.name > atwo.name) return 1\r\n            else if (aone.name < atwo.name) return -1\r\n            else return 0\r\n        })\r\n    }\r\n\r\n    let setQuarantineCenter = ({index, member, center}) => {\r\n        if(center == 'home') {\r\n            props.updateMemberByIndex({index, member: {...member, homeQuarantined: true, quarantineCenter: null}})\r\n        } else {\r\n            props.updateMemberByIndex({index, member: {...member, homeQuarantined: false, quarantineCenter: center}})\r\n        }\r\n    }\r\n\r\n    let setQuarantineDate = ({index, member, date}) => {\r\n        let rDate = new Date(date)\r\n        rDate.setDate(rDate.getDate() + 14)\r\n        let rIso = rDate.toISOString().split('T')[0]\r\n        props.updateMemberByIndex({index, member: {...member, quarantineDate: date, releaseDate: rIso}})\r\n    }\r\n\r\n    let setReleaseDate = ({index, member, date}) => {\r\n        props.updateMemberByIndex({index, member: {...member, releaseDate: date}})\r\n    }\r\n\r\n\r\n    let getQuarantineCenter = (member) => {\r\n        if(member.homeQuarantined) return \"home\"\r\n        else if (!member.homeQuarantined && member.quarantineCenter !== null) return member.quarantineCenter\r\n        else return member.quarantineCenter\r\n    }\r\n\r\n    let startSaveToServer = async () => {\r\n        \r\n        try {\r\n            setOpenSaveToServer(true)\r\n            setSaving(true)\r\n            let familyId = await saveFamily()\r\n            setSavingMsg(\"family saved now saving members\")\r\n            props.members.forEach(async member => {\r\n                await saveMember(familyId, member)\r\n            })\r\n            setSavingMsg('Members saved successfully !!')\r\n            setSaving(false)\r\n            \r\n            alert(' Success ! family saved successfully')\r\n\r\n            props.setFamily(null)\r\n            props.setMembers([])\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(' Fail ! something went wrong')\r\n        }\r\n\r\n        history.push(\"/survey\")\r\n    }\r\n\r\n    let saveFamily = () => {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(Apis.save_family, {\r\n                family: props.family\r\n            }).then(res => {\r\n                if(res.status == '200') {\r\n                    resolve(res.data.family._id)\r\n                }\r\n            }).catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    let saveMember = (familyId, member) => {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(Apis.save_member, {\r\n                member: {...member, family: familyId}\r\n            }).then(res => {\r\n                if(res.status == '200') resolve(\"ok\")\r\n            }).catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'fixed', top: 0, width: '100%'}}>\r\n                <AppBar position=\"static\" >\r\n                    <Toolbar style={{backgroundColor: 'green'}} >\r\n                        <Typography variant=\"h6\" style={{color: '#fafafa'}}>\r\n                            Quarantine Status\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n            <div style={{marginTop: 70}}>\r\n                <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', \r\n                alignItems: 'center', padding: 20}}>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, textAlign: 'center'}} >\r\n                        Has anyone Quarantined or need to be quarantined\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" style={{color: lightOrange, textAlign: 'center'}} >\r\n                    किसी को भी Quarantine किया गया है या Quarantine होने की आवश्यकता है\r\n                    </Typography>\r\n                </div>\r\n                <div>\r\n                    {loading &&\r\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 10}} >\r\n                            Wait while names are loading...\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <Divider />\r\n                <div style={{marginTop: 20}}>\r\n                    {props.members.map((member, index) => (\r\n                        <div style={{margin: 5,display: 'flex', \r\n                        flexDirection: 'column', borderTopLeftRadius: 5, borderTopRightRadius: 5,\r\n                        borderStyle: 'solid', borderWidth: 1, borderColor: lightGrey}}\r\n                         >\r\n                            <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap', \r\n                            backgroundColor: veryLightGrey, borderTopLeftRadius: 5,\r\n                             borderTopRightRadius: 5, alignItems: 'center'}}\r\n                             onClick={() => toggleQuarantine({index, member})} >\r\n                                <Checkbox checked={member.quarantined} />\r\n                                <Typography variant=\"subtitle2\" style={{marginLeft: 10}} >\r\n                                    {member.name+\" (\"+member.age+\")\"}\r\n                                </Typography>\r\n                            </div>\r\n                            <Divider />\r\n                            {member.quarantined &&\r\n                                <div style={{backgroundColor: 'white', padding: 5, display: 'flex',\r\n                                flexDirection: 'column'}}>\r\n                                    <FormControl variant=\"outlined\" >\r\n                                        <InputLabel id=\"natureId\" >Quarantine Center</InputLabel>\r\n                                        <Select label=\"Quarantine Center\" labelId=\"natureId\" value={getQuarantineCenter(member)} onChange={event => setQuarantineCenter({index, member, center: event.target.value})} >\r\n                                            <MenuItem value=\"home\" >Home Quarantined</MenuItem>\r\n                                            {sortByName(quarantineCenters).map(center => (\r\n                                                <MenuItem value={center._id} >{center.name}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <TextField type=\"date\" variant=\"outlined\" label=\"Quarantine Date\" value={member.quarantineDate} onChange={event => setQuarantineDate({index, member, date: event.target.value})} style={{marginTop: 10}} />\r\n                                    <TextField type=\"date\" variant=\"outlined\" label=\"Release Date\" value={member.releaseDate} onChange={event => setReleaseDate({index, member, date: event.target.value})} style={{marginTop: 10}} />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div style={{padding: 20, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa', marginLeft: 10}} \r\n                            startIcon={<Save />} onClick={() => startSaveToServer()} >\r\n                               Save To Server\r\n                        </Button>\r\n                </div> \r\n            </div>\r\n            <Dialog open={openSaveToServer} onClose={() => setOpenSaveToServer(false)} >\r\n                <div style={{padding: 10, display: 'flex', flexDirection: 'column', alignItems: 'center'}} >\r\n                    <Typography>{savingMsg}</Typography>\r\n                    {saving &&\r\n                        <CircularProgress />\r\n                    }\r\n                    {!saving &&\r\n                        <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                            <Button variant=\"contained\" style={{backgroundColor: lightBlue, color: '#fafafa'}} onClick={() => setOpenSaveToServer(false)} >Okay</Button>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        family: state.family,\r\n        members: state.members\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        updateMemberByIndex: ({index, member}) => dispatch(updateMemberByIndex({index, member})),\r\n        setFamily: family => dispatch(setFamily(family)),\r\n        setMembers: members => dispatch(setMembers(members))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ContactExposure)","import React, {useEffect, useState, useReducer} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppBar, Toolbar, IconButton, Typography, Button, Drawer, Dialog, TextField, FormControl, RadioGroup, FormControlLabel, Radio, Checkbox, FormLabel, CircularProgress, TableContainer, Paper, Table, TableHead, TableBody, TableRow, TableCell, InputLabel, Select, MenuItem, Divider } from '@material-ui/core'\r\nimport { Menu, ExitToApp, Edit } from '@material-ui/icons'\r\nimport { setAdmin } from '../actions/admin'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { lightBlue, lightOrange, lightGrey, errorRed} from '../colors'\r\nimport Axios from 'axios'\r\nimport Apis from '../Apis'\r\n\r\n\r\nlet GeneralReport = props => {\r\n\r\n    let history =  useHistory()\r\n\r\n    const [openDrawer, setOpenDrawer] = useState(false)\r\n\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [fetchedData, setFetchedData] = useState([])\r\n\r\n    const [blocks, setblocks] = useState([])\r\n    const [containmentAreas, setContainmentAreas] = useState([])\r\n    const [containmentSources, setContainmentSources] = useState([])\r\n    const [quarantineCenters, setQuarantineCenters] = useState([])\r\n    const [surveyOfficers, setSurveyOfficers] = useState([])\r\n\r\n    const [openDialog, setOpenDialog] = useState(false)\r\n\r\n    const [drawerAction, setDrawerAction] = useState('')\r\n\r\n\r\n    let qreducer = (state, action) => {\r\n        if(action.type == 'setName') {\r\n            let currentQuery = {...state}\r\n            currentQuery = {...currentQuery, name: {$regex: '\\\\b'+action.payload, $options: 'gi'}}\r\n            state = currentQuery\r\n        } else if (action.type == 'setMobileNumber') {\r\n            let currentQuery = {...state}\r\n            currentQuery = {...currentQuery, mobileNumber: {$regex: '\\\\b'+action.payload}}\r\n            state = currentQuery\r\n        } else if (action.type == 'setGovtIdNumber') {\r\n            let currentQuery = {...state}\r\n            currentQuery = {...currentQuery, govtIdNumber: {$regex: '\\\\b'+action.payload, $options: 'gi'}}\r\n            state = currentQuery\r\n        } else if (action.type == 'setContainmentArea') {\r\n            let currentQuery = {...state}\r\n            if(action.payload.length == 0) {\r\n                delete currentQuery['containmentArea']\r\n            } else {\r\n                currentQuery = {...currentQuery, containmentArea: {$in: action.payload}}\r\n            }\r\n            state = currentQuery\r\n        } else if (action.type == 'setZoneType') {\r\n            let currentQuery = {...state}\r\n            if(action.payload.length == 0) {\r\n                delete currentQuery['zoneType']\r\n            } else {\r\n                currentQuery = {...currentQuery, zoneType: {$in: action.payload}}\r\n            }\r\n            state = currentQuery\r\n        } else if (action.type == 'setQuarantinedType') {\r\n            let currentQuery = {...state}\r\n            if(action.payload == 'all') {\r\n                delete currentQuery['releaseDate']\r\n                currentQuery = {...currentQuery, quarantined: {$in: [true, false]}}\r\n            } else if (action.payload == 'ever') {\r\n                delete currentQuery['releaseDate']\r\n                currentQuery = {...currentQuery, quarantined: true}\r\n            } else if (action.payload == 'never') {\r\n                delete currentQuery['releaseDate']\r\n                currentQuery = {...currentQuery, quarantined: false}\r\n            } else if (action.payload == 'currently') {\r\n                currentQuery = {...currentQuery, quarantined: true, releaseDate: {$gte: (new Date()).toISOString()}}\r\n            } else if (action.payload == 'released') {\r\n                currentQuery = {...currentQuery, quarantined: true, releaseDate: {$lt: (new Date()).toISOString()}}\r\n            }\r\n            state = currentQuery\r\n        } else if (action.type == 'setQuarantineCenter') {\r\n            let currentQuery = {...state}\r\n            if(action.payload.length == 0) {\r\n                delete currentQuery['quarantineCenter']\r\n            } else currentQuery = {...currentQuery, quarantineCenter: {$in: action.payload}}\r\n            state = currentQuery\r\n        } else if (action.type == 'reset') {\r\n            state = {}\r\n        } else if (action.type == 'setAge') {\r\n            let currentQuery = {...state}\r\n            if(action.payload.minAge == null || action.payload.maxAge == null) {\r\n                delete currentQuery['age']\r\n            } else {\r\n                currentQuery = {...currentQuery, age: {$gte: action.payload.minAge, $lte: action.payload.maxAge}}\r\n            }\r\n            state = currentQuery\r\n        } else if (action.type == 'setSurveyDate') {\r\n            let currentQuery = {...state}\r\n            if(action.payload.minSurveyDate == null || action.payload.maxSurveyDate == null) {\r\n                delete currentQuery['surveyDate']\r\n            } else {\r\n                currentQuery = {...currentQuery, surveyDate: {$gte: (new Date(action.payload.minSurveyDate)).toISOString(), $lte: (new Date(action.payload.maxSurveyDate).toISOString())}}\r\n            }\r\n            state = currentQuery\r\n        } else if (action.type == 'setRiskLevel') {\r\n            let currentQuery = {...state}\r\n            if(action.payload.length == 0) {\r\n                delete currentQuery['riskLevel']\r\n            } else currentQuery = {...currentQuery, riskLevel: {$in: action.payload}}\r\n            state = currentQuery\r\n        } else if (action.type == 'setQuarantineDate') {\r\n            let currentQuery = {...state}\r\n            if(action.payload.minQuarantineDate == null || action.payload.maxQuarantineDate == null) {\r\n                delete currentQuery['quarantineDate']\r\n            } else {\r\n                currentQuery = {...currentQuery, quarantineDate: {$gte: (new Date(action.payload.minQuarantineDate)).toISOString(), $lte: (new Date(action.payload.maxQuarantineDate).toISOString())}}\r\n            }\r\n            state = currentQuery\r\n        } \r\n        return state;\r\n    }\r\n\r\n    const [query, qdispatch] = useReducer(qreducer, {})\r\n\r\n    let freducer = (state, action) => {\r\n        \r\n        if(action.type == 'toggle') {\r\n            console.log(action)\r\n            let payload = action.payload\r\n            let val = {...state}\r\n            val[payload] = !val[payload]\r\n            state = val\r\n        }\r\n\r\n        return state\r\n    }\r\n\r\n    const [fieldsets, fdispatch] = useReducer(freducer, {\r\n        name: true, age: true, sex: false, mobileNumber: true, govtIdType: false, \r\n        govtIdNumber: true, address: true, containmentArea: true, block: false,\r\n        zoneType: true, surveyDate: true, headName: true, headMobileNumber: false,\r\n        symptoms: true, deseases: false, pregnancy: false, traveledFrom: true, travelDate: false,\r\n        sourceContacted: true, contactNature: false, contactRelation: false, riskLevel: true,\r\n        quarantineStatus: true, quarantineDate: false, releaseDate: false, selectedForSample: true,\r\n        quarantineCenter: false\r\n    })\r\n\r\n\r\n\r\n\r\n    let filterInit = {\r\n        name: '', age: '', sex: '', mobileNumber: '', quarantineCenters: [],\r\n        govtIdNumber: '', minAge: null, maxAge: null, minSurveyDate: null, maxSurveyDate: null,\r\n        riskLevels: [], minQuarantineDate: null, maxQuarantineDate: null\r\n    }\r\n\r\n    let filterReducer = (state, action) => {\r\n        if(action.type == 'setName') state = {...state, name: action.payload}\r\n        else if (action.type == 'setAge') state = {...state, age: action.payload}\r\n        else if (action.type == 'setSex') state = {...state, sex: action.payload}\r\n        else if (action.type == 'setMobileNumber') state = {...state, mobileNumber: action.payload}\r\n        else if (action.type == 'setGovtIdNumber') state = {...state, govtIdNumber: action.payload}\r\n        else if (action.type == 'toggleQuarantineCenter') {\r\n            let pstate = {...state}\r\n            if(pstate.quarantineCenters.includes(action.payload)) {\r\n                pstate.quarantineCenters.forEach((center, index) => {\r\n                    if(center == action.payload) pstate.quarantineCenters.splice(index, 1)\r\n                })\r\n            } else pstate.quarantineCenters.push(action.payload)\r\n            state = pstate\r\n        } else if (action.type == 'reset') {\r\n            state = filterInit\r\n        } else if (action.type == 'setMinAge') {\r\n            state = {...state, minAge: action.payload}\r\n        } else if (action.type == 'setMaxAge') {\r\n            state = {...state, maxAge: action.payload}\r\n        } else if (action.type == 'setMinSurveyDate') {\r\n            state = {...state, minSurveyDate: action.payload}\r\n        } else if (action.type == 'setMaxSurveyDate') {\r\n            state = {...state, maxSurveyDate: action.payload}\r\n        } else if (action.type == 'setRiskLevel') {\r\n            let pstate = {...state}\r\n            if(pstate.riskLevels.includes(action.payload)) {\r\n                pstate.riskLevels.forEach((level, index) => {\r\n                    if(level == action.payload) pstate.riskLevels.splice(index, 1)\r\n                })\r\n                state = pstate;\r\n            } else pstate.riskLevels.push(action.payload)\r\n\r\n            state = pstate\r\n        } else if (action.type == 'setMinQuarantineDate') {\r\n            state = {...state, minQuarantineDate: action.payload}\r\n        } else if (action.type == 'setMaxQuarantineDate') {\r\n            state = {...state, maxQuarantineDate: action.payload}\r\n        } \r\n        return state\r\n    }\r\n\r\n    const [filter, filterDispatch] = useReducer(filterReducer, filterInit)\r\n\r\n    let resetFilter = () => {\r\n        setSelectedContainmentArea([])\r\n        setZoneTypes([])\r\n        setQuarantineStatus('all')\r\n        filterDispatch({type: 'reset'})\r\n        qdispatch({type: 'reset'})\r\n    }\r\n\r\n    const [openQuarantineCenterSelection, setOpenQuarantineCenterSelection] = useState(false)\r\n\r\n    const [openContainmentAreaSelection, setOpenContainmentAreaSelection] = useState(false)\r\n    const [selectedContainmentArea, setSelectedContainmentArea] = useState([])\r\n\r\n    const [zoneTypes, setZoneTypes] = useState([])\r\n    const [quarantineStatus, setQuarantineStatus] = useState('all')\r\n\r\n    const [openAgeFilter, setOpenAgeFilter] = useState(false)\r\n    const [openSurveyDateFilter, setOpenSurveyDateFilter] = useState(false)\r\n    const [openRiskLevelFilter, setOpenRiskLevelFilter] = useState(false)\r\n    const [openQuarantineDateFilter, setOpenQuarantineDateFilter] = useState(false)\r\n\r\n    const [openEditMember, setOpenEditMember] = useState(false)\r\n\r\n\r\n    let memberToEditInit = {\r\n        symptoms: [], deseases: [], quarantined: null, quarantineDate: null, quarantineCenter: null,\r\n        releaseDate: null\r\n    }\r\n\r\n    let memberToEditReducer = (state, action) => {\r\n        if(action.type == 'setMemberToEdit') {\r\n            state = action.payload\r\n        } else if (action.type == 'toggleSymptom') {\r\n            let pstate = {...state}\r\n            if(pstate.symptoms.includes(action.payload)) {\r\n                pstate.symptoms.forEach((symptom, index) => {\r\n                    if(symptom == action.payload) pstate.symptoms.splice(index, 1)\r\n                })\r\n            } else pstate.symptoms.push(action.payload)\r\n            state = pstate\r\n        } else if (action.type == 'toggleDesease') {\r\n            let pstate = {...state}\r\n            if(pstate.deseases.includes(action.payload)) {\r\n                pstate.deseases.forEach((desease, index) => {\r\n                    if(desease == action.payload) pstate.deseases.splice(index, 1)\r\n                })\r\n            } else pstate.deseases.push(action.payload)\r\n            state = pstate\r\n        } else if (action.type == 'toggleQuarantined') {\r\n            state = {...state, quarantined: !state.quarantined}\r\n        } else if (action.type == 'setQuarantineCenter') {\r\n            if(action.payload == 'home') {\r\n                state = {...state, homeQuarantined: true, quarantineCenter: null}\r\n            } else state = {...state, quarantineCenter: action.payload, homeQuarantined: false}            \r\n        } else if (action.type == 'setQuarantineDate') {\r\n            state = {...state, quarantineDate: action.payload}\r\n        } else if (action.type == 'setReleaseDate') {\r\n            state = {...state, releaseDate: action.payload}\r\n        }\r\n        return state;\r\n    }\r\n\r\n    const [memberToEditIndex, setMemberToEditIndex] = useState(null)\r\n    const [memberToEdit, memberToEditDispatch] = useReducer(memberToEditReducer, memberToEditInit)\r\n\r\n\r\n    let toggleContainmentAreaSelection = cArea => {\r\n        if(selectedContainmentArea.includes(cArea)) {\r\n            let sca = [...selectedContainmentArea]\r\n            sca.forEach((sc, index) => {\r\n                if(sc == cArea) sca.splice(index, 1)\r\n            })\r\n            setSelectedContainmentArea(sca)\r\n        } else setSelectedContainmentArea([...selectedContainmentArea, cArea])\r\n    }\r\n\r\n    let toggleZoneTypeSelection = zone => {\r\n        if(zoneTypes.includes(zone)) {\r\n            let zts = [...zoneTypes]\r\n            zts.forEach((zt, index) => {\r\n                if(zt == zone) zts.splice(index, 1)\r\n            })\r\n            setZoneTypes(zts)\r\n        } else setZoneTypes([...zoneTypes, zone])\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadInitialData()\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    let loadInitialData = () => {\r\n        loadBlocks()\r\n        loadContainmentAreas()\r\n        loadContainmentSources()\r\n        loadQuarantineCenters()\r\n        loadSurveyOfficers()\r\n    }\r\n\r\n    let loadBlocks = () => {\r\n        setLoading(true)\r\n        Axios.get(Apis.area_blocks).then(res => {\r\n            if(res.status == '200') setblocks(res.data.blocks)\r\n        }).catch(err => console.log(err))\r\n        .finally(() => setLoading(false))\r\n    }\r\n\r\n    let loadContainmentAreas = () => {\r\n        setLoading(true)\r\n        Axios.get(Apis.containment_areas).then(res => {\r\n            if(res.status == '200') setContainmentAreas(res.data.containment_areas)\r\n        }).catch(err => console.log(err))\r\n        .finally(() => setLoading(false))\r\n    }\r\n\r\n    let loadQuarantineCenters = () => {\r\n        setLoading(true)\r\n        Axios.get(Apis.quarantine_centers).then(res => {\r\n            if(res.status == '200') setQuarantineCenters(res.data.quarantine_centers)\r\n        }).catch(err => console.log(err))\r\n        .finally(() => setLoading(false))\r\n    }\r\n\r\n    let loadContainmentSources = () => {\r\n        setLoading(true)\r\n        Axios.get(Apis.containment_sources).then(res => {\r\n            if(res.status == '200') setContainmentSources(res.data.containment_sources)\r\n        }).catch(err => console.log(err))\r\n        .finally(() => setLoading(false))\r\n    }\r\n\r\n    let loadSurveyOfficers = () => {\r\n        setLoading(true)\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n            url: Apis.survey_officers,\r\n            method: 'GET'\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                setSurveyOfficers(res.data.surveyOfficers)\r\n            }\r\n        }).catch(err => console.log(err))\r\n        .finally(() => setLoading(false))\r\n    }\r\n\r\n    let sortByName = inputArray => {\r\n        return inputArray.sort((aone, atwo) => {\r\n            if(aone.name > atwo.name) return 1\r\n            else if (aone.name < atwo.name) return -1\r\n            else return 0\r\n        })\r\n    }\r\n\r\n\r\n    let fetchGeneralReport = () => {\r\n        setLoading(true)\r\n        setOpenDrawer(false)\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n            url: Apis.fetch_general_report,\r\n            method: 'POST',\r\n            data: {\r\n                query\r\n            }\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                setFetchedData(res.data.general_report)\r\n            }\r\n        }).catch(error => console.log(error))\r\n        .finally(() => setLoading(false))\r\n    }\r\n\r\n\r\n    let getContainmentAreaName = areaId => {\r\n        let area = containmentAreas.find(ar => {\r\n            if(ar._id == areaId) return ar\r\n        })\r\n\r\n        return area.name\r\n    }\r\n\r\n    let getQuarantineStatus = member => {\r\n        if(member.quarantined) {\r\n            if((new Date(member.releaseDate) >= (new Date()))) {\r\n                if(member.homeQuarantined) return 'Home Quarantined'\r\n                else return 'Quarantined'\r\n            } else return 'Released'\r\n        } else return ''\r\n    }\r\n\r\n    let getSourceName = source => {\r\n        console.log(source)\r\n        let src = containmentSources.find(s => {\r\n            if(s._id == source) return s\r\n        })\r\n        return src.name+\" (\"+src.age+\")\"\r\n    }\r\n\r\n    let getQuarantineCenterName = center => {\r\n        let cntr = quarantineCenters.find(c => {\r\n            if(c._id == center) return c\r\n        })\r\n        return cntr.name\r\n    }\r\n\r\n\r\n    let saveEditedMember = () => {\r\n        let memberId = memberToEdit._id\r\n        let updates = {...memberToEdit}\r\n        delete updates['_id']\r\n        Axios({\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+props.admin.token\r\n            },\r\n            url: Apis.save_edited_member,\r\n            method: 'POST',\r\n            data: {\r\n                memberId, \r\n                updates\r\n            }\r\n        }).then(res => {\r\n            if(res.status == '200') {\r\n                let oldData = [...fetchedData]\r\n                oldData.forEach((mem, index) => {\r\n                    if(mem._id == memberId) {\r\n                        console.log(\"member need to be switched\")\r\n                        oldData.splice(index, 1, memberToEdit)\r\n                    }\r\n                    setFetchedData(oldData)\r\n                })\r\n                alert('Edited Successfully')\r\n                \r\n            }\r\n        }).catch(err => {\r\n            console.log('error while saving')\r\n            console.log(err)\r\n            alert('Failed To Edit Something went wrong')\r\n        })\r\n        .finally(() => setOpenEditMember(false))\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '100vh'}}>\r\n            <div style={{position: 'fixed', top: 0, width: '100%'}}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar style={{backgroundColor: 'green'}}>\r\n                        <IconButton edge=\"start\" aria-label=\"menu\" onClick={() => setOpenDrawer(true)}>\r\n                            <Menu style={{color: \"white\"}} />\r\n                        </IconButton>\r\n\r\n                        <Typography variant=\"h6\" style={{flexGrow: 1, marginLeft: 15}}>\r\n                            General Report\r\n                        </Typography>\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n            <div>\r\n                <div style={{marginTop: 80, display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\r\n                    {loading && \r\n                        <div style={{padding: 50, display: 'flex', justifyContent: 'center', alignItems: 'center'}} >\r\n                            <CircularProgress />\r\n                        </div>\r\n                    }\r\n\r\n                    {!loading &&\r\n                        <div>\r\n                            <div style={{padding: 10}} >\r\n                                <Typography variant=\"h6\" style={{color: lightGrey}} >Total {fetchedData.length} results</Typography>\r\n                            </div>\r\n\r\n                            <TableContainer component={Paper} style={{maxWidth: '150%'}} >\r\n                                <Table>\r\n                                    <TableHead style={{backgroundColor: 'yellow'}} >\r\n                                        {fieldsets.name &&\r\n                                            <TableCell component={\"h6\"} >Name</TableCell>\r\n                                        }\r\n                                        {fieldsets.age &&\r\n                                            <TableCell onClick={() => setOpenAgeFilter(true)} component={\"h6\"}>Age</TableCell>\r\n                                        }\r\n                                        {fieldsets.sex &&\r\n                                            <TableCell component={\"h6\"}>Sex</TableCell>\r\n                                        }\r\n                                        {fieldsets.mobileNumber &&\r\n                                            <TableCell component={\"h6\"}>Mobile Number</TableCell>\r\n                                        }\r\n                                        {fieldsets.govtIdType &&\r\n                                            <TableCell component={\"h6\"}>Government Id Type</TableCell>\r\n                                        }\r\n                                        {fieldsets.govtIdNumber &&\r\n                                            <TableCell component={\"h6\"}>Government Id Number</TableCell>\r\n                                        }\r\n                                        {fieldsets.containmentArea &&\r\n                                            <TableCell component={\"h6\"} onClick={() => setOpenContainmentAreaSelection(true)} >Containment Area</TableCell>\r\n                                        }\r\n                                        {fieldsets.surveyDate &&\r\n                                            <TableCell onClick={() => setOpenSurveyDateFilter(true)} component={\"h6\"}>Survey Date</TableCell>\r\n                                        }\r\n                                        {fieldsets.symptoms &&\r\n                                            <TableCell component={\"h6\"}>Symptoms</TableCell>\r\n                                        }\r\n                                        {fieldsets.deseases &&\r\n                                            <TableCell component={\"h6\"}>Deseases</TableCell>\r\n                                        }\r\n                                        {fieldsets.pregnancy &&\r\n                                            <TableCell component={\"h6\"}>Pregnancy</TableCell>\r\n                                        }\r\n                                        {fieldsets.traveledFrom &&\r\n                                            <TableCell component={\"h6\"}>Traveled From</TableCell>\r\n                                        }\r\n                                        {fieldsets.travelDate &&\r\n                                            <TableCell component={\"h6\"}>Travel Date</TableCell>\r\n                                        }\r\n                                        {fieldsets.sourceContacted &&\r\n                                            <TableCell component={\"h6\"}>Source Contacted</TableCell>\r\n                                        }\r\n                                        {fieldsets.contactNature &&\r\n                                            <TableCell component={\"h6\"}>Contact Nature</TableCell>\r\n                                        }\r\n                                        {fieldsets.contactRelation &&\r\n                                            <TableCell component={\"h6\"}>Relation With Contact</TableCell>\r\n                                        }\r\n                                        {fieldsets.riskLevel &&\r\n                                            <TableCell onClick={() => setOpenRiskLevelFilter(true)} component={\"h6\"}>Risk Level</TableCell>\r\n                                        }\r\n                                        {fieldsets.quarantineStatus &&\r\n                                            <TableCell component={\"h6\"}>Quarantine Status</TableCell>\r\n                                        }\r\n                                        {fieldsets.quarantineDate &&\r\n                                            <TableCell onClick={() => setOpenQuarantineDateFilter(true)} component={\"h6\"}>Quarantine Date</TableCell>\r\n                                        }\r\n                                        {fieldsets.quarantineCenter &&\r\n                                            <TableCell onClick={() =>setOpenQuarantineCenterSelection(true)} >Quarantine Center</TableCell>\r\n                                        }\r\n                                        {fieldsets.releaseDate &&\r\n                                            <TableCell component={\"h6\"}>Release Date</TableCell>\r\n                                        }\r\n                                        <TableCell>Edit</TableCell>\r\n                                    </TableHead>\r\n\r\n                                    <TableBody>\r\n                                        {sortByName(fetchedData).map((member, index) => (\r\n                                            <TableRow>\r\n                                                {fieldsets.name &&\r\n                                                    <TableCell>{member.name}</TableCell>\r\n                                                }\r\n                                                {fieldsets.age &&\r\n                                                    <TableCell>{member.age}</TableCell>\r\n                                                }\r\n                                                {fieldsets.sex &&\r\n                                                    <TableCell>{member.sex}</TableCell>\r\n                                                }\r\n                                                {fieldsets.mobileNumber &&\r\n                                                    <TableCell>{member.mobileNumber}</TableCell>\r\n                                                }\r\n                                                {fieldsets.govtIdType &&\r\n                                                    <TableCell>{member.govtIdType}</TableCell>\r\n                                                }\r\n                                                {fieldsets.govtIdNumber &&\r\n                                                    <TableCell>{member.govtIdNumber}</TableCell>\r\n                                                }\r\n                                                {fieldsets.containmentArea &&\r\n                                                    <TableCell>{getContainmentAreaName(member.containmentArea)}</TableCell>\r\n                                                }\r\n                                                {fieldsets.surveyDate &&\r\n                                                    <TableCell>{(member.surveyDate != null) ? (new Date(member.surveyDate)).toDateString() : ''}</TableCell>\r\n                                                }\r\n                                                {fieldsets.symptoms &&\r\n                                                    <TableCell>{member.symptoms.length > 0 ? 'Yes' : 'No'}</TableCell>\r\n                                                }\r\n                                                {fieldsets.deseases &&\r\n                                                    <TableCell>{member.deseases.length > 0 ? 'Yes' : 'No'}</TableCell>\r\n                                                }\r\n                                                {fieldsets.pregnancy &&\r\n                                                    <TableCell>{member.pregnancy ? 'Pregnant': ''}</TableCell>\r\n                                                }\r\n                                                {fieldsets.traveledFrom &&\r\n                                                    <TableCell>{member.traveledFrom}</TableCell>\r\n                                                }\r\n                                                {fieldsets.travelDate &&\r\n                                                    <TableCell>{member.travelDate != null ? (new Date(member.travelDate)).toLocaleDateString() : ''}</TableCell>\r\n                                                }\r\n                                                {fieldsets.sourceContacted &&\r\n                                                    <TableCell>{member.sourceContacted != null ? getSourceName(member.sourceContacted) : ''}</TableCell>\r\n                                                }\r\n                                                {fieldsets.contactNature &&\r\n                                                    <TableCell>Contact Nature</TableCell>\r\n                                                }\r\n                                                {fieldsets.contactRelation &&\r\n                                                    <TableCell>Relation With Contact</TableCell>\r\n                                                }\r\n                                                {fieldsets.riskLevel &&\r\n                                                    <TableCell>\r\n                                                        {member.riskLevel == 'high' && \r\n                                                            <Typography>High</Typography>\r\n                                                        }\r\n                                                        {member.riskLevel == 'low' && \r\n                                                            <Typography>Low</Typography>\r\n                                                        }\r\n                                                        {member.riskLevel == 'none' && \r\n                                                            <Typography>None</Typography>\r\n                                                        }\r\n                                                    </TableCell>\r\n                                                }\r\n                                                {fieldsets.quarantineStatus &&\r\n                                                    <TableCell>{getQuarantineStatus(member)}</TableCell>\r\n                                                }\r\n                                                {fieldsets.quarantineDate &&\r\n                                                    <TableCell>{member.quarantineDate !== null ? (new Date(member.quarantineDate)).toDateString() : ''}</TableCell>\r\n                                                }\r\n                                                {fieldsets.quarantineCenter &&\r\n                                                    <TableCell>{member.quarantineCenter !== null ? getQuarantineCenterName(member.quarantineCenter) : ''}</TableCell>\r\n                                                }\r\n                                                {fieldsets.releaseDate &&\r\n                                                    <TableCell>{member.releaseDate !== null ? (new Date(member.releaseDate)).toDateString() : ''}</TableCell>\r\n                                                }\r\n                                                <TableCell>\r\n                                                <IconButton edge=\"start\" aria-label=\"edit\" onClick={() => {\r\n                                                    memberToEditDispatch({type: 'setMemberToEdit', payload: member})\r\n                                                    setOpenEditMember(true)\r\n                                                }} >\r\n                                                    <Edit style={{color: lightOrange}} />\r\n                                                </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>   \r\n                                        ))}\r\n                                    </TableBody>\r\n\r\n                                </Table>\r\n                            </TableContainer>\r\n\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <Drawer anchor='top' open={openDrawer} onClose={() => setOpenDrawer(false)} >\r\n                <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}} >\r\n                    <div style={{width: '14%', display: 'flex', flexDirection: 'column', \r\n                    justifyContent: 'space-around', alignItems: 'center', borderRightStyle: 'solid',\r\n                    borderRightWidth: 1, borderRightColor: lightGrey}} >\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, color: '#fafafa', margin: 10}}\r\n                        onClick={() => setDrawerAction('filters')} >\r\n                            Filters\r\n                        </Button>\r\n\r\n                        <Button variant=\"contained\" style={{backgroundColor: errorRed, color: '#fafafa', margin: 10}}\r\n                        onClick={() => resetFilter()} >\r\n                            Reset Filters\r\n                        </Button>\r\n\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, color: '#fafafa', margin: 10}}\r\n                        onClick={() => setDrawerAction('fieldsets')} >\r\n                            Fieldsets\r\n                        </Button>\r\n\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightOrange, \r\n                            color: '#fafafa', margin: 10}} onClick={() => fetchGeneralReport()}>\r\n                            Apply\r\n                        </Button>\r\n                    </div>\r\n                    <div style={{width: '85%'}} >\r\n                        {(drawerAction == 'filters') &&\r\n                            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                                <div style={{flexGrow: 1, display: 'flex', flexDirection: 'column', alignItems: 'center', padding: 20}}>\r\n                                    <Typography variant='h6' style={{color: lightGrey}}>\r\n                                        Basic Information Based\r\n                                    </Typography>\r\n                                    <TextField variant='outlined' label='Name' value={filter.name} style={{margin: 5}} onChange={event => {\r\n                                            qdispatch({type: 'setName', payload: event.target.value});\r\n                                            filterDispatch({type: 'setName', payload: event.target.value})\r\n                                        }} />\r\n                                    <TextField variant='outlined' label='Mobile Number' value={filter.mobileNumber} style={{margin: 5}} onChange={event => {\r\n                                            qdispatch({type: 'setMobileNumber', payload: event.target.value})\r\n                                            filterDispatch({type: 'setMobileNumber', payload: event.target.value})\r\n                                        }} />\r\n                                    <TextField variant='outlined' label='Government Id Number' value={filter.govtIdNumber} style={{margin: 5}} onChange={event => {\r\n                                            qdispatch({type: 'setGovtIdNumber', payload: event.target.value})\r\n                                            filterDispatch({type: 'setGovtIdNumber', payload: event.target.value})\r\n                                        }} />\r\n                                </div>\r\n                                <div style={{flexGrow: 1, display: 'flex', flexDirection: 'column', alignItems: 'center', padding: 20}}>\r\n                                    <Typography variant='h6' style={{color: lightGrey}}>\r\n                                        Containment Area Based\r\n                                    </Typography>\r\n                                    <Button variant=\"contained\" style={{backgroundColor: \r\n                                        lightGrey, color: '#fafafa', marginTop: 10}} onClick={() => setOpenContainmentAreaSelection(true)} >\r\n                                        Select Containment Areas\r\n                                    </Button>\r\n                                    <FormControl style={{marginTop: 10}} > \r\n                                        <FormLabel>Select Zone Type</FormLabel>\r\n                                        <FormControlLabel control={<Checkbox value=\"containment\" checked={zoneTypes.includes('containment')} onChange={event => toggleZoneTypeSelection('containment')} />} label=\"Containment Zone\" />\r\n                                        <FormControlLabel control={<Checkbox value=\"buffer\" checked={zoneTypes.includes('buffer')} onChange={event => toggleZoneTypeSelection('buffer')} />} label=\"Buffer Zone\" />    \r\n                                    </FormControl>\r\n                                    <Button variant=\"contained\" style={{backgroundColor: lightGrey, color: '#fafafa', marginTop: 10}}\r\n                                    onClick={() => qdispatch({type: 'setZoneType', payload: zoneTypes})} >Set Zone</Button>\r\n                                </div>\r\n                                <div style={{flexGrow: 1, display: 'flex', flexDirection: 'column', alignItems: 'center', padding: 20}}>\r\n                                    <Typography variant='h6' style={{color: lightGrey}}>\r\n                                        Quarantine Status Based\r\n                                    </Typography>\r\n                                    <FormControl>\r\n                                        <RadioGroup value={quarantineStatus} onChange={event => {\r\n                                            setQuarantineStatus(event.target.value);\r\n                                            qdispatch({type: 'setQuarantinedType', payload: event.target.value})\r\n                                        }} >\r\n                                            <FormControlLabel value='all' control={<Radio />} label=\"All\"/>\r\n                                            <FormControlLabel value='ever' control={<Radio />} label=\"Ever\"/>\r\n                                            <FormControlLabel value='never' control={<Radio />} label=\"Never\"/>\r\n                                            <FormControlLabel value='currently' control={<Radio />} label=\"Currently\"/>\r\n                                            <FormControlLabel value='released' control={<Radio />} label=\"Released\"/>\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {(drawerAction == 'fieldsets') &&\r\n                        <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                            <div style={{flexGrow: 1, display: 'flex', flexDirection: 'column', alignItems: 'center', padding: 20}}>\r\n                                <Typography variant='h6' style={{color: lightGrey}}>\r\n                                    Basic Information\r\n                                </Typography>\r\n                                <FormControl style={{marginTop: 10}} > \r\n                                    <FormControlLabel control={<Checkbox value=\"name\" checked={fieldsets.name} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Name\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"age\" checked={fieldsets.age} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Age\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"sex\" checked={fieldsets.sex} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Sex\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"mobileNumber\" checked={fieldsets.mobileNumber} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"MobileNumber\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"govtIdType\" checked={fieldsets.govtIdType} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Government Id Type\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"govtIdNumber\" checked={fieldsets.govtIdNumber} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Government Id Number\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"containmentArea\" checked={fieldsets.containmentArea} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Containment Area\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"surveyDate\" checked={fieldsets.surveyDate} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Survey Date\" />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div style={{flexGrow: 1, display: 'flex', flexDirection: 'column', alignItems: 'center', padding: 20}}>\r\n                                <Typography variant='h6' style={{color: lightGrey}}>\r\n                                    Health And Travel\r\n                                </Typography>\r\n                                <FormControl style={{marginTop: 10}} > \r\n                                    <FormControlLabel control={<Checkbox value=\"symptoms\" checked={fieldsets.symptoms} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Symptoms\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"deseases\" checked={fieldsets.deseases} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Deseases\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"pregnancy\" checked={fieldsets.pregnancy} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Pregnancy\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"traveledFrom\" checked={fieldsets.traveledFrom} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Traveled From\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"travelDate\" checked={fieldsets.travelDate} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Travel Date\" />\r\n                                    \r\n                                </FormControl>\r\n                            </div>\r\n                            <div style={{flexGrow: 1, display: 'flex', flexDirection: 'column', alignItems: 'center', padding: 20}}>\r\n                                <Typography variant='h6' style={{color: lightGrey}}>\r\n                                    Corona specific\r\n                                </Typography>\r\n                                <FormControl style={{marginTop: 10}} > \r\n                                    <FormControlLabel control={<Checkbox value=\"sourceContacted\" checked={fieldsets.sourceContacted} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Source Contacted\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"contactNature\" checked={fieldsets.contactNature} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Contact Nature\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"contactRelaion\" checked={fieldsets.contactRelation} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Relation With Contact\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"riskLevel\" checked={fieldsets.riskLevel} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Risk Level\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"quarantineStatus\" checked={fieldsets.quarantineStatus} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Quarantine Status\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"quarantineDate\" checked={fieldsets.quarantineDate} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Quarantine Date\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"quarantineCenter\" checked={fieldsets.quarantineCenter} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Quarantine Center\" />\r\n                                    <FormControlLabel control={<Checkbox value=\"releaseDate\" checked={fieldsets.releaseDate} onChange={event => fdispatch({type: 'toggle', payload: event.target.value})} />} label=\"Release Date\" />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Drawer>\r\n            <Dialog open={openContainmentAreaSelection} onClose={() => setOpenContainmentAreaSelection(false)}>\r\n                <div style={{padding: 20, display: 'flex', flexDirection: 'column'}}>\r\n                    <FormControl>\r\n                        {sortByName(containmentAreas).map(area => (\r\n                            <FormControlLabel control={<Checkbox value={area._id} checked={selectedContainmentArea.includes(area._id)} onChange={event => toggleContainmentAreaSelection(event.target.value)} />} label={area.name} />\r\n                        ))}\r\n                    </FormControl>\r\n                    <div>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa'}} onClick={() => \r\n                            {\r\n                                qdispatch({type: 'setContainmentArea', payload: selectedContainmentArea});\r\n                                setOpenContainmentAreaSelection(false)\r\n                                }} >\r\n                            Okay\r\n                        </Button>\r\n                        <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}}\r\n                        onClick={() => setOpenContainmentAreaSelection(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog open={openQuarantineCenterSelection} onClose={() => setOpenQuarantineCenterSelection(false)} >\r\n                <div style={{padding: 20, display: 'flex', flexDirection: 'column'}}>\r\n                    <FormControl>\r\n                        {sortByName(quarantineCenters).map(center => (\r\n                            <FormControlLabel control={<Checkbox value={center._id} checked={filter.quarantineCenters.includes(center._id)} onChange={event => filterDispatch({type: 'toggleQuarantineCenter', payload: event.target.value})} />} label={center.name} />\r\n                        ))}\r\n                    </FormControl>\r\n                    <div>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa'}} onClick={() => \r\n                            {\r\n                                qdispatch({type: 'setQuarantineCenter', payload: filter.quarantineCenters});\r\n                                setOpenQuarantineCenterSelection(false)\r\n                                }} >\r\n                            Okay\r\n                        </Button>\r\n                        <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}}\r\n                        onClick={() => setOpenQuarantineCenterSelection(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog open={openAgeFilter} onClose={() => setOpenAgeFilter(false)} >\r\n                <div style={{padding: 20, display: 'flex', flexDirection: 'column'}}>\r\n                    <Typography style={{textAlign: 'center'}} >Age Filter</Typography>\r\n                    <TextField type=\"number\" style={{marginTop: 10}} variant='outlined' label=\"From\" value={filter.minAge} onChange={event => filterDispatch({type: 'setMinAge', payload: event.target.value})} />\r\n                    <TextField type=\"number\" style={{marginTop: 10}} variant='outlined' label=\"To\" value={filter.maxAge} onChange={event => filterDispatch({type: 'setMaxAge', payload: event.target.value})} />\r\n                    <div style={{padding: 10, display: 'row'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa'}} onClick={() => \r\n                            {\r\n                                qdispatch({type: 'setAge', payload: {minAge: filter.minAge, maxAge: filter.maxAge}});\r\n                                setOpenAgeFilter(false)\r\n                                }} >\r\n                            Okay\r\n                        </Button>\r\n                        <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}}\r\n                        onClick={() => setOpenAgeFilter(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog open={openSurveyDateFilter} onClose={() => setOpenSurveyDateFilter(false)} >\r\n                <div style={{padding: 20, display: 'flex', flexDirection: 'column'}}>\r\n                    <Typography style={{textAlign: 'center'}} >Survey Date</Typography>\r\n                    <TextField type=\"date\" style={{marginTop: 10}} variant='outlined' label=\"From\" value={filter.minSurveyDate} onChange={event => filterDispatch({type: 'setMinSurveyDate', payload: event.target.value})} />\r\n                    <TextField type=\"date\" style={{marginTop: 10}} variant='outlined' label=\"To\" value={filter.maxSurveyDate} onChange={event => filterDispatch({type: 'setMaxSurveyDate', payload: event.target.value})} />\r\n                    <div style={{padding: 10, display: 'row'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa'}} onClick={() => \r\n                            {\r\n                                qdispatch({type: 'setSurveyDate', payload: {minSurveyDate: filter.minSurveyDate, maxSurveyDate: filter.maxSurveyDate}});\r\n                                setOpenSurveyDateFilter(false)\r\n                                }} >\r\n                            Okay\r\n                        </Button>\r\n                        <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}}\r\n                        onClick={() => setOpenSurveyDateFilter(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog open={openRiskLevelFilter} onClose={() => setOpenRiskLevelFilter(false)}>\r\n                <div style={{padding: 20, display: 'flex', flexDirection: 'column'}} >\r\n                    <Typography style={{textAlign: 'center'}} >Risk Level</Typography>\r\n                    <FormControl>\r\n                        <FormControlLabel control={<Checkbox checked={filter.riskLevels.includes('low')} onChange={() => filterDispatch({type: 'setRiskLevel', payload: 'low'})} />} label=\"Low\" />\r\n                        <FormControlLabel control={<Checkbox checked={filter.riskLevels.includes('high')} onChange={() => filterDispatch({type: 'setRiskLevel', payload: 'high'})} />} label=\"High\" />\r\n                        <FormControlLabel control={<Checkbox checked={filter.riskLevels.includes('none')} onChange={() => filterDispatch({type: 'setRiskLevel', payload: 'none'})} />} label=\"None\" />\r\n                    </FormControl>\r\n                    <div style={{padding: 10, display: 'row'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa'}} onClick={() => \r\n                            {\r\n                                qdispatch({type: 'setRiskLevel', payload: filter.riskLevels});\r\n                                setOpenRiskLevelFilter(false)\r\n                                }} >\r\n                            Okay\r\n                        </Button>\r\n                        <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}}\r\n                        onClick={() => setOpenRiskLevelFilter(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog open={openQuarantineDateFilter} onClose={() => setOpenQuarantineDateFilter(false)} >\r\n                <div style={{padding: 20, display: 'flex', flexDirection: 'column'}}>\r\n                    <Typography style={{textAlign: 'center'}} >Quarantine Date</Typography>\r\n                    <TextField type=\"date\" style={{marginTop: 10}} variant='outlined' label=\"From\" value={filter.minQuarantineDate} onChange={event => filterDispatch({type: 'setMinQuarantineDate', payload: event.target.value})} />\r\n                    <TextField type=\"date\" style={{marginTop: 10}} variant='outlined' label=\"To\" value={filter.maxQuarantineDate} onChange={event => filterDispatch({type: 'setMaxQuarantineDate', payload: event.target.value})} />\r\n                    <div style={{padding: 10, display: 'row'}}>\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightBlue, \r\n                            color: '#fafafa'}} onClick={() => \r\n                            {\r\n                                qdispatch({type: 'setQuarantineDate', payload: {minQuarantineDate: filter.minQuarantineDate, maxQuarantineDate: filter.maxQuarantineDate}});\r\n                                setOpenQuarantineDateFilter(false)\r\n                                }} >\r\n                            Okay\r\n                        </Button>\r\n                        <Button variant=\"text\" style={{color: lightBlue, marginLeft: 10}}\r\n                        onClick={() => setOpenQuarantineDateFilter(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog open={openEditMember} onClose={() => setOpenEditMember(false)} >\r\n                <div style={{padding: 10, display: 'flex', flexDirection: 'column'}}>\r\n                    <Paper style={{maxHeight: 450, width: 500, overflow: 'auto'}} >\r\n                        <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                            <Typography>Symptoms</Typography>\r\n                            <FormControl row>\r\n                                <FormControlLabel control={<Checkbox checked={memberToEdit.symptoms.includes(\"cold\")} value=\"cold\" onChange={() => memberToEditDispatch({type: 'toggleSymptom', payload: 'cold'})} />} label=\"Cold\" />\r\n                                <FormControlLabel control={<Checkbox checked={memberToEdit.symptoms.includes(\"cough\")} value=\"cough\" onChange={() => memberToEditDispatch({type: 'toggleSymptom', payload: 'cough'})} />} label=\"Cough\" />\r\n                                <FormControlLabel control={<Checkbox checked={memberToEdit.symptoms.includes(\"fever\")} value=\"fever\" onChange={() => memberToEditDispatch({type: 'toggleSymptom', payload: 'fever'})} />} label=\"Fever\" />\r\n                                <FormControlLabel control={<Checkbox checked={memberToEdit.symptoms.includes(\"short_breating\")} value=\"short_breathing\" onChange={() => memberToEditDispatch({type: 'toggleSymptom', payload: 'short_breathing'})} />} label=\"Short Breating\" />\r\n                            </FormControl>\r\n                            <Divider />\r\n                            <Typography style={{marginTop: 10}} >Deseases</Typography>\r\n                            <FormControl row>\r\n                                <FormControlLabel control={<Checkbox checked={memberToEdit.deseases.includes(\"sugar\")} value=\"sugar\" onChange={() => memberToEditDispatch({type: 'toggleDesease', payload: 'sugar'})} />} label=\"Sugar\" />\r\n                                <FormControlLabel control={<Checkbox checked={memberToEdit.deseases.includes(\"blood_pressure\")} value=\"blood_pressure\" onChange={() => memberToEditDispatch({type: 'toggleDesease', payload: 'blood_pressure'})} />} label=\"Blood Pressure\" />\r\n                                <FormControlLabel control={<Checkbox checked={memberToEdit.deseases.includes(\"diabetes\")} value=\"diabetes\" onChange={() => memberToEditDispatch({type: 'toggleDesease', payload: 'diabetes'})} />} label=\"Diabetes\" />\r\n                                <FormControlLabel control={<Checkbox checked={memberToEdit.deseases.includes(\"cancer\")} value=\"cancer\" onChange={() => memberToEditDispatch({type: 'toggleDesease', payload: 'cancer'})} />} label=\"Cancer\" />\r\n                            </FormControl>\r\n                            <Divider />\r\n                            <FormControl style={{marginTop: 10}}>\r\n                                <FormControlLabel control={<Checkbox checked={memberToEdit.quarantined} onChange={() => memberToEditDispatch({type: 'toggleQuarantined'})} />} label=\"Quarantined\" />\r\n                            </FormControl>\r\n                            <Divider />\r\n                            {memberToEdit.quarantined &&\r\n                                <div>\r\n                                    <FormControl variant=\"outlined\" style={{marginTop: 10}} >\r\n                                        <InputLabel id=\"qCenterId\" >Quarantine Center</InputLabel>\r\n                                        <Select labelId=\"qCenterId\" label=\"Quarantine Center\" value={(memberToEdit.homeQuarantined && memberToEdit.quarantined) ? 'home' : memberToEdit.quarantineCenter} onChange={event => memberToEdit({type: 'setQuarantineCenter', payload: event.target.value})} >\r\n                                            <MenuItem value='home' >Home</MenuItem>\r\n                                            {sortByName(quarantineCenters).map(center => (\r\n                                                <MenuItem value={center._id}>{center.name}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <div style={{marginTop: 10, display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                                        <Typography style={{marginRight: 10}} >Quarantine Date</Typography>\r\n                                        <TextField type=\"date\" value={memberToEdit.quarantineDate.split('T')[0]} onChange={event => memberToEditDispatch({type: 'setQuarantineDate', payload: event.target.value}) } />\r\n                                    </div>\r\n                                    <div style={{marginTop: 10, display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                                        <Typography style={{marginRight: 10}} >Release Date</Typography>\r\n                                        <TextField type=\"date\" value={memberToEdit.releaseDate.split('T')[0]} onChange={event => memberToEditDispatch({type: 'setReleaseDate', payload: event.target.value})} />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                    <div style={{padding: 10, display: 'flex', justifyContent: 'center'\r\n                        , alignItems: 'center' }} >\r\n                        <Button variant=\"contained\" style={{backgroundColor: lightGrey, color: '#fafafa'}} \r\n                         onClick={() => saveEditedMember()} >\r\n                            Save\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        admin: state.admin\r\n    }\r\n}\r\n\r\nlet mapActionsToProps = dispatch => {\r\n    return {\r\n        setAdmin: admin => dispatch(setAdmin(admin))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(GeneralReport)","import React from 'react';\nimport { Switch, BrowserRouter, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\nimport Home from './views/Home'\nimport Koka from './views/Koka'\nimport AdminLogin from './views/AdminLogin'\nimport AdminDashboard from './views/AdminDashboard';\nimport SurveyOfficers from './views/SurveyOfficers';\nimport AreaBlocks from './views/AreaBlocks';\nimport ContainmentAreas from './views/ContainmentAreas';\nimport QuarantineCenters from './views/QuarantineCenters';\nimport AddContainmentSource from './views/AddContainmentSource';\nimport Main from './views/survey/Main';\nimport Login from './views/survey/Login';\nimport Dashboard from './views/survey/Dashboard';\nimport GeneralInformation from './views/survey/GeneralInformation';\nimport FamilyMembers from './views/survey/FamilyMembers';\nimport FamilyHead from './views/survey/FamilyHead';\nimport Symptoms from './views/survey/Symptoms';\n\nimport TestComponent from './views/TestComponent';\nimport Deseases from './views/survey/Deseases';\nimport Pregnancy from './views/survey/Pregnancy';\nimport TravelDetails from './views/survey/TravelDetails';\nimport ContactExposure from './views/survey/ContactExposure';\nimport SelectForSample from './views/survey/SelectForSample';\nimport QuarantineStatus from './views/survey/QuarantineStatus';\nimport GeneralReport from './views/GeneralReport';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/koka\">\n            <Koka />\n          </Route>\n          <Route exact path=\"/admin/login\">\n            <AdminLogin />\n          </Route>\n          <Route exact path=\"/admin/dashboard\">\n            <AdminDashboard />\n          </Route>\n          <Route exact path=\"/admin/survey_officers\">\n            <SurveyOfficers />\n          </Route>\n          <Route exact path=\"/admin/areablocks\">\n            <AreaBlocks />\n          </Route>\n          <Route exact path=\"/admin/containment_areas\">\n            <ContainmentAreas />\n          </Route>\n          <Route exact path=\"/admin/quarantine_centers\">\n            <QuarantineCenters />\n          </Route>\n          <Route exact path=\"/admin/add_containment_source\">\n            <AddContainmentSource />\n          </Route>\n          <Route exact path=\"/admin/general_report\">\n            <GeneralReport />\n          </Route>\n\n\n          <Route exact path=\"/survey\" >\n            <Main />\n          </Route>\n          <Route exact path=\"/survey/login\" >\n            <Login />\n          </Route>\n          <Route exact path=\"/survey/dashboard\" >\n            <Dashboard />\n          </Route>\n          <Route exact path=\"/survey/general_information\" >\n            <GeneralInformation />\n          </Route>\n          <Route exact path=\"/survey/family_members\" >\n            <FamilyMembers />\n          </Route>\n          <Route exact path=\"/survey/family_head\">\n            <FamilyHead />\n          </Route>\n          <Route exact path=\"/survey/symptoms\">\n            <Symptoms />\n          </Route>\n          <Route exact path=\"/survey/deseases\">\n            <Deseases />\n          </Route>\n          <Route exact path=\"/survey/pregnancy\">\n            <Pregnancy />\n          </Route>\n          <Route exact path=\"/survey/travel_details\">\n            <TravelDetails />\n          </Route>\n          <Route exact path=\"/survey/contact_exposure\">\n            <ContactExposure />\n          </Route>\n          <Route exact path=\"/survey/select_for_sample\">\n            <SelectForSample />\n          </Route>\n          <Route exact path=\"/survey/quarantine_status\">\n            <QuarantineStatus />\n          </Route>\n\n\n          <Route exact path=\"/test\">\n            <TestComponent />\n          </Route>\n\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}